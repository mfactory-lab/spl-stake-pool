{"version":3,"file":"index.iife.min.js","sources":["../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","../node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js","../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_assert.js","../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/crypto.js","../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/utils.js","../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_sha2.js","../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_u64.js","../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/sha512.js","../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/ed25519.js","../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js","../node_modules/.pnpm/base-x@3.0.9/node_modules/base-x/src/index.js","../node_modules/.pnpm/bs58@4.0.1/node_modules/bs58/index.js","../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/sha256.js","../node_modules/.pnpm/text-encoding-utf-8@1.0.2/node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/.pnpm/borsh@0.7.0/node_modules/borsh/lib/index.js","../node_modules/.pnpm/@solana+buffer-layout@4.0.1/node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/.pnpm/bigint-buffer@1.1.5/node_modules/bigint-buffer/dist/browser.js","../node_modules/.pnpm/superstruct@0.14.2/node_modules/superstruct/lib/index.es.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v1.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/parse.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v35.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/md5.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v3.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v5.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/nil.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/version.js","../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/generateRequest.js","../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/client/browser/index.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/regenerator/index.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/.pnpm/@babel+runtime@7.23.7/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/.pnpm/eventemitter3@4.0.7/node_modules/eventemitter3/index.js","../node_modules/.pnpm/rpc-websockets@7.9.0/node_modules/rpc-websockets/dist/lib/utils.js","../node_modules/.pnpm/rpc-websockets@7.9.0/node_modules/rpc-websockets/dist/lib/client.js","../node_modules/.pnpm/rpc-websockets@7.9.0/node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/sha3.js","../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/hmac.js","../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/secp256k1.js","../node_modules/.pnpm/@solana+web3.js@1.87.6/node_modules/@solana/web3.js/lib/index.browser.esm.js","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/constants.js","../node_modules/.pnpm/@solana+buffer-layout-utils@0.2.0/node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs","../node_modules/.pnpm/@solana+buffer-layout-utils@0.2.0/node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs","../node_modules/.pnpm/@solana+buffer-layout-utils@0.2.0/node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs","../node_modules/.pnpm/@solana+buffer-layout-utils@0.2.0/node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/errors.js","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/instructions/types.js","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/instructions/internal.js","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/instructions/approve.js","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/extensions/accountType.js","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/state/multisig.js","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/state/account.js","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/state/mint.js","../node_modules/.pnpm/@solana+spl-token@0.3.10_@solana+web3.js@1.87.6_fastestsmallesttextencoderdecoder@1.0.22/node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js","../node_modules/.pnpm/superstruct@1.0.3/node_modules/superstruct/dist/index.mjs","../node_modules/.pnpm/buffer-layout@1.2.2/node_modules/buffer-layout/lib/Layout.js","../src/utils/layout.ts","../src/utils/math.ts","../src/constants.ts","../src/utils/program-address.ts","../node_modules/.pnpm/@coral-xyz+borsh@0.29.0_@solana+web3.js@1.87.6/node_modules/@coral-xyz/borsh/dist/index.js","../src/layouts.ts","../src/utils/stake.ts","../src/utils/instruction.ts","../src/utils/index.ts","../src/instructions.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!isBytes(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    let res = new Uint8Array(sum);\n    let pad = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultDataPack = void 0;\nexports.createError = createError;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar errors = new Map([[-32000, \"Event not provided\"], [-32600, \"Invalid Request\"], [-32601, \"Method not found\"], [-32602, \"Invalid params\"], [-32603, \"Internal error\"], [-32604, \"Params not found\"], [-32605, \"Method forbidden\"], [-32606, \"Event forbidden\"], [-32700, \"Parse error\"]]);\nvar DefaultDataPack = /*#__PURE__*/function () {\n  function DefaultDataPack() {\n    (0, _classCallCheck2[\"default\"])(this, DefaultDataPack);\n  }\n  (0, _createClass2[\"default\"])(DefaultDataPack, [{\n    key: \"encode\",\n    value: function encode(value) {\n      return JSON.stringify(value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(value) {\n      return JSON.parse(value);\n    }\n  }]);\n  return DefaultDataPack;\n}();\n/**\n * Creates a JSON-RPC 2.0-compliant error.\n * @param {Number} code - error code\n * @param {String} details - error details\n * @return {Object}\n */\nexports.DefaultDataPack = DefaultDataPack;\nfunction createError(code, details) {\n  var error = {\n    code: code,\n    message: errors.get(code) || \"Internal Server Error\"\n  };\n  if (details) error[\"data\"] = details;\n  return error;\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nvar _utils = require(\"./utils\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n// @ts-ignore\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n  var _super = _createSuper(CommonClient);\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @param {DataPack} dataPack - data pack contains encoder and decoder\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    var dataPack = arguments.length > 4 ? arguments[4] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n    var _a$autoconnect = _a.autoconnect,\n      autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n      _a$reconnect = _a.reconnect,\n      reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n      _a$reconnect_interval = _a.reconnect_interval,\n      reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n      _a$max_reconnects = _a.max_reconnects,\n      max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n      rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n    if (!dataPack) _this.dataPack = new _utils.DefaultDataPack();else _this.dataPack = dataPack;\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n        var rpc_id = _this2.generate_request_id(method, params);\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || undefined,\n          id: rpc_id\n        };\n        _this2.socket.send(_this2.dataPack.encode(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n              case 2:\n                resp = _context.sent;\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n                throw new Error(\"authentication failed\");\n              case 5:\n                return _context.abrupt(\"return\", resp);\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params\n        };\n        _this3.socket.send(_this3.dataPack.encode(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n              case 3:\n                result = _context3.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n              case 6:\n                return _context3.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n              case 3:\n                result = _context4.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n              case 6:\n                return _context4.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n        _this4.emit(\"open\");\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n        try {\n          message = _this4.dataPack.decode(message);\n        } catch (error) {\n          return;\n        }\n        // check if any listeners are attached and forward event\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else\n            // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            }\n          // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message === null || message === void 0 ? void 0 : message.params);\n            });\n          }\n          return;\n        }\n        // reject early since server's response is invalid\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n          reason = _ref2.reason;\n        if (_this4.ready)\n          // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n  var _super = _createSuper(WebSocketBrowserImpl);\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!ut.isBytes(data))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { toBigIntLE, toBufferLE } from 'bigint-buffer';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport createRpc from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _class;\nlet _Symbol$toStringTag;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\n_Symbol$toStringTag = Symbol.toStringTag;\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [_Symbol$toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_class = PublicKey;\nPublicKey.default = new _class('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = byteArray.shift();\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountCount = decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = byteArray.shift();\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: byteArray.shift(),\n      numReadonlySignedAccounts: byteArray.shift(),\n      numReadonlyUnsignedAccounts: byteArray.shift()\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n/**\n * Use these options to construct a durable nonce transaction.\n */\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n/**\n * @internal\n */\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures) {\n    return this._verifySignatures(this.serializeMessage(), requireAllSignatures === undefined ? true : requireAllSignatures);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData, requireAllSignatures) {\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures && !this._verifySignatures(signData, requireAllSignatures)) {\n      throw new Error('Signature verification failed');\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nconst encodeDecode = layout => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {\n    decode,\n    encode\n  };\n};\nconst bigInt = length => property => {\n  const layout = blob(length, property);\n  const {\n    encode,\n    decode\n  } = encodeDecode(layout);\n  const bigIntLayout = layout;\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return toBigIntLE(Buffer.from(src));\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = toBufferLE(bigInt, length);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n};\nconst u64 = bigInt(8);\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nvar fastStableStringify = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n\nvar fastStableStringify$1 = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringify);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nclass SendTransactionError extends Error {\n  constructor(message, logs) {\n    super(message);\n    this.logs = void 0;\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends RpcWebSocketCommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n/**\n * Configuration object for changing query behavior\n */\n/**\n * Information describing a cluster node\n */\n/**\n * Information describing a vote account\n */\n/**\n * A collection of cluster vote accounts\n */\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  })))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"0.0.0-development\" }`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify$1(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', configWithoutEncoding);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */ // eslint-disable-next-line no-dupe-class-members\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  // eslint-disable-next-line no-dupe-class-members\n  // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Fetch a processed block from the cluster.\n   */ // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */ // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */ // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Simulate a transaction\n   */ // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError('failed to simulate transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Sign and send a transaction\n   */ // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError('failed to send transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              if (e instanceof Error) {\n                console.error(`${method} error for argument`, args, e.message);\n              }\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify$1([subscriptionConfig.method, args], true /* isArrayProp */);\n\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(publicKey, callback, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64');\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, filters ? {\n      filters: filters\n    } : undefined /* extra */);\n\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _class2;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_class2 = Lockup;\nLockup.default = new _class2(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: 0,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeState::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insuffcient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3731;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */ // eslint-disable-next-line no-redeclare\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n    if (programId === TOKEN_PROGRAM_ID) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map","export const encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map","import { blob } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base.mjs';\nexport const bigInt = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntLE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferLE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const bigIntBE = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntBE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferBE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const u64 = bigInt(8);\nexport const u64be = bigIntBE(8);\nexport const u128 = bigInt(16);\nexport const u128be = bigIntBE(16);\nexport const u192 = bigInt(24);\nexport const u192be = bigIntBE(24);\nexport const u256 = bigInt(32);\nexport const u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map","import { u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base.mjs';\nexport const bool = (property) => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n    const boolLayout = layout;\n    boolLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n    boolLayout.encode = (bool, buffer, offset) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n    return boolLayout;\n};\n//# sourceMappingURL=native.js.map","import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport const publicKey = (property) => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map","/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account does not contain valid data */\nexport class TokenInvalidAccountDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountDataError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid account index */\nexport class TokenTransferHookAccountNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountNotFound';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid seed */\nexport class TokenTransferHookInvalidSeed extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookInvalidSeed';\n    }\n}\n/** Thrown if account data required by an extra account meta seed config could not be fetched */\nexport class TokenTransferHookAccountDataNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountDataNotFound';\n    }\n}\n//# sourceMappingURL=errors.js.map","/** Instructions defined by the program */\nexport var TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeMint\"] = 0] = \"InitializeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n    TokenInstruction[TokenInstruction[\"Transfer\"] = 3] = \"Transfer\";\n    TokenInstruction[TokenInstruction[\"Approve\"] = 4] = \"Approve\";\n    TokenInstruction[TokenInstruction[\"Revoke\"] = 5] = \"Revoke\";\n    TokenInstruction[TokenInstruction[\"SetAuthority\"] = 6] = \"SetAuthority\";\n    TokenInstruction[TokenInstruction[\"MintTo\"] = 7] = \"MintTo\";\n    TokenInstruction[TokenInstruction[\"Burn\"] = 8] = \"Burn\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n    TokenInstruction[TokenInstruction[\"ThawAccount\"] = 11] = \"ThawAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n    TokenInstruction[TokenInstruction[\"MintToChecked\"] = 14] = \"MintToChecked\";\n    TokenInstruction[TokenInstruction[\"BurnChecked\"] = 15] = \"BurnChecked\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n    TokenInstruction[TokenInstruction[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n    TokenInstruction[TokenInstruction[\"GetAccountDataSize\"] = 21] = \"GetAccountDataSize\";\n    TokenInstruction[TokenInstruction[\"InitializeImmutableOwner\"] = 22] = \"InitializeImmutableOwner\";\n    TokenInstruction[TokenInstruction[\"AmountToUiAmount\"] = 23] = \"AmountToUiAmount\";\n    TokenInstruction[TokenInstruction[\"UiAmountToAmount\"] = 24] = \"UiAmountToAmount\";\n    TokenInstruction[TokenInstruction[\"InitializeMintCloseAuthority\"] = 25] = \"InitializeMintCloseAuthority\";\n    TokenInstruction[TokenInstruction[\"TransferFeeExtension\"] = 26] = \"TransferFeeExtension\";\n    TokenInstruction[TokenInstruction[\"ConfidentialTransferExtension\"] = 27] = \"ConfidentialTransferExtension\";\n    TokenInstruction[TokenInstruction[\"DefaultAccountStateExtension\"] = 28] = \"DefaultAccountStateExtension\";\n    TokenInstruction[TokenInstruction[\"Reallocate\"] = 29] = \"Reallocate\";\n    TokenInstruction[TokenInstruction[\"MemoTransferExtension\"] = 30] = \"MemoTransferExtension\";\n    TokenInstruction[TokenInstruction[\"CreateNativeMint\"] = 31] = \"CreateNativeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeNonTransferableMint\"] = 32] = \"InitializeNonTransferableMint\";\n    TokenInstruction[TokenInstruction[\"InterestBearingMintExtension\"] = 33] = \"InterestBearingMintExtension\";\n    TokenInstruction[TokenInstruction[\"CpiGuardExtension\"] = 34] = \"CpiGuardExtension\";\n    TokenInstruction[TokenInstruction[\"InitializePermanentDelegate\"] = 35] = \"InitializePermanentDelegate\";\n    TokenInstruction[TokenInstruction[\"TransferHookExtension\"] = 36] = \"TransferHookExtension\";\n    // ConfidentialTransferFeeExtension = 37,\n    // WithdrawalExcessLamports = 38,\n    TokenInstruction[TokenInstruction[\"MetadataPointerExtension\"] = 39] = \"MetadataPointerExtension\";\n})(TokenInstruction || (TokenInstruction = {}));\n//# sourceMappingURL=types.js.map","import { PublicKey } from '@solana/web3.js';\n/** @internal */\nexport function addSigners(keys, ownerOrAuthority, multiSigners) {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (const signer of multiSigners) {\n            keys.push({\n                pubkey: signer instanceof PublicKey ? signer : signer.publicKey,\n                isSigner: true,\n                isWritable: false,\n            });\n        }\n    }\n    else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\n//# sourceMappingURL=internal.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const approveInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct an Approve instruction\n *\n * @param account      Account to set the delegate for\n * @param delegate     Account authorized to transfer tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n        instruction: TokenInstruction.Approve,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an Approve instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, delegate, owner, multiSigners }, data, } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Approve)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an Approve instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveInstructionUnchecked({ programId, keys: [account, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approve.js.map","export var AccountType;\n(function (AccountType) {\n    AccountType[AccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountType[AccountType[\"Mint\"] = 1] = \"Mint\";\n    AccountType[AccountType[\"Account\"] = 2] = \"Account\";\n})(AccountType || (AccountType = {}));\nexport const ACCOUNT_TYPE_SIZE = 1;\n//# sourceMappingURL=accountType.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError } from '../errors.js';\n/** Buffer layout for de/serializing a multisig */\nexport const MultisigLayout = struct([\n    u8('m'),\n    u8('n'),\n    bool('isInitialized'),\n    publicKey('signer1'),\n    publicKey('signer2'),\n    publicKey('signer3'),\n    publicKey('signer4'),\n    publicKey('signer5'),\n    publicKey('signer6'),\n    publicKey('signer7'),\n    publicKey('signer8'),\n    publicKey('signer9'),\n    publicKey('signer10'),\n    publicKey('signer11'),\n]);\n/** Byte length of a multisig */\nexport const MULTISIG_SIZE = MultisigLayout.span;\n/**\n * Retrieve information about a multisig\n *\n * @param connection Connection to use\n * @param address    Multisig account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Multisig information\n */\nexport async function getMultisig(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMultisig(address, info, programId);\n}\n/**\n * Unpack a multisig\n *\n * @param address   Multisig account\n * @param info      Multisig account data\n * @param programId SPL Token program account\n *\n * @return Unpacked multisig\n */\nexport function unpackMultisig(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length != MULTISIG_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const multisig = MultisigLayout.decode(info.data);\n    return { address, ...multisig };\n}\n/** Get the minimum lamport balance for a multisig to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMultisig(connection, commitment) {\n    return await connection.getMinimumBalanceForRentExemption(MULTISIG_SIZE, commitment);\n}\n//# sourceMappingURL=multisig.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getAccountLen } from '../extensions/extensionType.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Token account state as stored by the program */\nexport var AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nexport const AccountLayout = struct([\n    publicKey('mint'),\n    publicKey('owner'),\n    u64('amount'),\n    u32('delegateOption'),\n    publicKey('delegate'),\n    u8('state'),\n    u32('isNativeOption'),\n    u64('isNative'),\n    u64('delegatedAmount'),\n    u32('closeAuthorityOption'),\n    publicKey('closeAuthority'),\n]);\n/** Byte length of a token account */\nexport const ACCOUNT_SIZE = AccountLayout.span;\n/**\n * Retrieve information about a token account\n *\n * @param connection Connection to use\n * @param address    Token account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getAccount(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackAccount(address, info, programId);\n}\n/**\n * Retrieve information about multiple token accounts in a single RPC call\n *\n * @param connection Connection to use\n * @param addresses  Token accounts\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getMultipleAccounts(connection, addresses, commitment, programId = TOKEN_PROGRAM_ID) {\n    const infos = await connection.getMultipleAccountsInfo(addresses, commitment);\n    return addresses.map((address, i) => unpackAccount(address, infos[i], programId));\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    const accountLen = getAccountLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(accountLen, commitment);\n}\n/**\n * Unpack a token account\n *\n * @param address   Token account\n * @param info      Token account data\n * @param programId SPL Token program account\n *\n * @return Unpacked token account\n */\nexport function unpackAccount(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Account)\n            throw new TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData,\n    };\n}\n//# sourceMappingURL=account.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, TokenInvalidMintError, TokenOwnerOffCurveError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getMintLen } from '../extensions/extensionType.js';\nimport { ACCOUNT_SIZE } from './account.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span;\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nexport async function getMint(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nexport function unpackMint(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= ACCOUNT_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Mint)\n            throw new TokenInvalidMintError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMint(connection, commitment) {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMintWithExtensions(connection, extensions, commitment) {\n    const mintLen = getMintLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nexport async function getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport function getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n//# sourceMappingURL=mint.js.map","import { SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\n/**\n * Construct a CreateAssociatedTokenAccount instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.alloc(0), programId, associatedTokenProgramId);\n}\n/**\n * Construct a CreateAssociatedTokenAccountIdempotent instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountIdempotentInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.from([1]), programId, associatedTokenProgramId);\n}\nfunction buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, instructionData, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: instructionData,\n    });\n}\n/**\n * Construct a RecoverNested instruction\n *\n * @param nestedAssociatedToken             Nested associated token account (must be owned by `ownerAssociatedToken`)\n * @param nestedMint                        Token mint for the nested associated token account\n * @param destinationAssociatedToken        Wallet's associated token account\n * @param ownerAssociatedToken              Owner associated token account address (must be owned by `owner`)\n * @param ownerMint                         Token mint for the owner associated token account\n * @param owner                             Wallet address for the owner associated token account\n * @param programId                         SPL Token program account\n * @param associatedTokenProgramId          SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createRecoverNestedInstruction(nestedAssociatedToken, nestedMint, destinationAssociatedToken, ownerAssociatedToken, ownerMint, owner, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: nestedAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: nestedMint, isSigner: false, isWritable: false },\n        { pubkey: destinationAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerMint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: true },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: Buffer.from([2]),\n    });\n}\n//# sourceMappingURL=associatedTokenAccount.js.map","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n        if (mask &&\n            struct.type !== 'type' &&\n            isObject(struct.schema) &&\n            isObject(value) &&\n            !Array.isArray(value)) {\n            for (const key in value) {\n                if (struct.schema[key] === undefined) {\n                    delete value[key];\n                }\n            }\n        }\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `withCoercion` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const schema = struct instanceof Struct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, { coerce: true });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","import { Layout as LayoutCls, u8 } from 'buffer-layout';\nimport { Layout } from '@coral-xyz/borsh';\nimport { Buffer } from 'buffer';\n\nclass FutureEpochLayout<T> extends LayoutCls<T | null> {\n  layout: Layout<T>;\n  discriminator: Layout<number>;\n\n  constructor(layout: Layout<T>, property?: string) {\n    super(-1, property);\n    this.layout = layout;\n    this.discriminator = u8();\n  }\n\n  encode(src: T | null, b: Buffer, offset = 0): number {\n    if (src === null || src === undefined) {\n      return this.discriminator.encode(0, b, offset);\n    }\n    this.discriminator.encode(1, b, offset);\n    return this.layout.encode(src, b, offset + 1) + 1;\n  }\n\n  decode(b: Buffer, offset = 0): T | null {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (discriminator === 0) {\n      return null;\n    }\n    return this.layout.decode(b, offset + 1);\n  }\n\n  getSpan(b: Buffer, offset = 0): number {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (discriminator === 0) {\n      return 1;\n    }\n    return this.layout.getSpan(b, offset + 1) + 1;\n  }\n}\n\nexport function futureEpoch<T>(layout: Layout<T>, property?: string): Layout<T | null> {\n  return new FutureEpochLayout<T>(layout, property);\n}\n","import BN from 'bn.js';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\n\nconst SOL_DECIMALS = Math.log10(LAMPORTS_PER_SOL);\n\nexport function solToLamports(amount: number): number {\n  if (Number.isNaN(amount)) {\n    return Number(0);\n  }\n  return new BN(Number(amount).toFixed(SOL_DECIMALS).replace('.', '')).toNumber();\n}\n\nexport function lamportsToSol(lamports: number | BN | bigint): number {\n  if (typeof lamports === 'number') {\n    return Math.abs(lamports) / LAMPORTS_PER_SOL;\n  }\n  if (typeof lamports === 'bigint') {\n    return Math.abs(Number(lamports)) / LAMPORTS_PER_SOL;\n  }\n\n  let signMultiplier = 1;\n  if (lamports.isNeg()) {\n    signMultiplier = -1;\n  }\n\n  const absLamports = lamports.abs();\n  const lamportsString = absLamports.toString(10).padStart(10, '0');\n  const splitIndex = lamportsString.length - 9;\n  const solString = lamportsString.slice(0, splitIndex) + '.' + lamportsString.slice(splitIndex);\n  return signMultiplier * parseFloat(solString);\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  if (denominator.isZero()) {\n    return 0;\n  }\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n","import { Buffer } from 'buffer';\nimport { PublicKey } from '@solana/web3.js';\n\n// Public key that identifies the metadata program.\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\nexport const METADATA_MAX_NAME_LENGTH = 32;\nexport const METADATA_MAX_SYMBOL_LENGTH = 10;\nexport const METADATA_MAX_URI_LENGTH = 200;\n\n// Public key that identifies the SPL Stake Pool program.\nexport const STAKE_POOL_PROGRAM_ID = new PublicKey('SPoo1Ku8WFXoNDMHPsrGSTSG1Y47rzgn41SLUNakuHy');\n\n// Maximum number of validators to update during UpdateValidatorListBalance.\nexport const MAX_VALIDATORS_TO_UPDATE = 5;\n\n// Seed for ephemeral stake account\nexport const EPHEMERAL_STAKE_SEED_PREFIX = Buffer.from('ephemeral');\n\n// Seed used to derive transient stake accounts.\nexport const TRANSIENT_STAKE_SEED_PREFIX = Buffer.from('transient');\n\n// Minimum amount of staked SOL required in a validator stake account to allow\n// for merges without a mismatch on credits observed\nexport const MINIMUM_ACTIVE_STAKE = 1_000_000;\n\n/// Minimum amount of lamports in the reserve\nexport const MINIMUM_RESERVE_LAMPORTS = 0;\n\n/// Current supported max by the program\nexport const DEFAULT_MAX_VALIDATORS = 2950;\n","import { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport {\n  EPHEMERAL_STAKE_SEED_PREFIX,\n  METADATA_PROGRAM_ID,\n  TRANSIENT_STAKE_SEED_PREFIX,\n} from '../constants';\n\n/**\n * Generates the withdraw authority program address for the stake pool\n */\nexport function findWithdrawAuthorityProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [stakePoolAddress.toBuffer(), Buffer.from('withdraw')],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport function findStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed?: number,\n) {\n  const seeds = [voteAccountAddress.toBuffer(), stakePoolAddress.toBuffer()];\n  if (seed) {\n    seeds.push(new BN(seed).toArrayLike(Buffer, 'le', 4));\n  }\n  const [publicKey] = PublicKey.findProgramAddressSync(seeds, programId);\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport function findTransientStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [\n      TRANSIENT_STAKE_SEED_PREFIX,\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed.toArrayLike(Buffer, 'le', 8),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the ephemeral program address for stake pool re-delegation\n */\nexport function findEphemeralStakeProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [EPHEMERAL_STAKE_SEED_PREFIX, stakePoolAddress.toBuffer(), seed.toArrayLike(Buffer, 'le', 8)],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the token metadata address by {@link mint}\n */\nexport function findMetadataAddress(mint: PublicKey): PublicKey {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [Buffer.from('metadata'), METADATA_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    METADATA_PROGRAM_ID,\n  );\n  return publicKey;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i256 = exports.u256 = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"i8\", { enumerable: true, get: function () { return buffer_layout_2.s8; } });\nObject.defineProperty(exports, \"u16\", { enumerable: true, get: function () { return buffer_layout_2.u16; } });\nObject.defineProperty(exports, \"i16\", { enumerable: true, get: function () { return buffer_layout_2.s16; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"i32\", { enumerable: true, get: function () { return buffer_layout_2.s32; } });\nObject.defineProperty(exports, \"f32\", { enumerable: true, get: function () { return buffer_layout_2.f32; } });\nObject.defineProperty(exports, \"f64\", { enumerable: true, get: function () { return buffer_layout_2.f64; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = (0, buffer_layout_1.blob)(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, \"le\");\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nfunction u256(property) {\n    return new BNLayout(32, false, property);\n}\nexports.u256 = u256;\nfunction i256(property) {\n    return new BNLayout(32, true, property);\n}\nexports.i256 = i256;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout((0, buffer_layout_1.blob)(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = (0, buffer_layout_1.u8)();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout((0, buffer_layout_1.u8)(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error(\"Invalid bool: \" + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(elementLayout, (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = (0, buffer_layout_1.struct)([\n        u64(\"tag\"),\n        layout.replicate(\"data\"),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error(\"Invalid tag, expected: \" +\n                tag.toString(\"hex\") +\n                \", got: \" +\n                receivedTag.toString(\"hex\"));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.blob)((0, buffer_layout_1.offset)(length, -length.span), \"data\"),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, (data) => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), (data) => data.toString(\"utf-8\"), (s) => Buffer.from(s, \"utf-8\"), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = (0, buffer_layout_1.union)(discriminant !== null && discriminant !== void 0 ? discriminant : (0, buffer_layout_1.u8)(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = (0, buffer_layout_1.struct)([\n        (0, buffer_layout_1.seq)(elementLayout, length, \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property) {\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [key, value];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return (this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset));\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(new MapEntryLayout(keyLayout, valueLayout), (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => new Map(values), (values) => ({ values: Array.from(values.entries()) }), property);\n}\nexports.map = map;\n//# sourceMappingURL=index.js.map","import { publicKey, struct, u32, u64, u8, option, vec } from '@coral-xyz/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport type { Infer } from 'superstruct';\nimport { coerce, enums, instance, nullable, number, optional, string, type } from 'superstruct';\nimport { futureEpoch } from './utils';\n\nexport interface Fee {\n  denominator: BN;\n  numerator: BN;\n}\n\nexport interface Lockup {\n  unixTimestamp: BN;\n  epoch: BN;\n  custodian: PublicKey;\n}\n\nexport const fee = (property?: string) =>\n  struct<Fee>([u64('denominator'), u64('numerator')], property);\n\nconst lockup = (property?: string) =>\n  struct<Lockup>([u64('unixTimestamp'), u64('epoch'), publicKey('custodian')], property);\n\nexport enum AccountType {\n  Uninitialized,\n  StakePool,\n  ValidatorList,\n}\n\nexport const BigNumFromString = coerce(instance(BN), string(), (value) => {\n  return new BN(value, 10);\n});\n\nexport const PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  (value) => new PublicKey(value),\n);\n\nexport type StakeAccountType = Infer<typeof StakeAccountType>;\nexport const StakeAccountType = enums(['uninitialized', 'initialized', 'delegated', 'rewardsPool']);\n\nexport type StakeMeta = Infer<typeof StakeMeta>;\nexport const StakeMeta = type({\n  rentExemptReserve: BigNumFromString,\n  authorized: type({\n    staker: PublicKeyFromString,\n    withdrawer: PublicKeyFromString,\n  }),\n  lockup: type({\n    unixTimestamp: number(),\n    epoch: number(),\n    custodian: PublicKeyFromString,\n  }),\n});\n\nexport type StakeAccountInfo = Infer<typeof StakeAccountInfo>;\nexport const StakeAccountInfo = type({\n  meta: StakeMeta,\n  stake: nullable(\n    type({\n      delegation: type({\n        voter: PublicKeyFromString,\n        stake: BigNumFromString,\n        activationEpoch: BigNumFromString,\n        deactivationEpoch: BigNumFromString,\n        warmupCooldownRate: number(),\n      }),\n      creditsObserved: number(),\n    }),\n  ),\n});\n\nexport type StakeAccount = Infer<typeof StakeAccount>;\nexport const StakeAccount = type({\n  type: StakeAccountType,\n  info: optional(StakeAccountInfo),\n});\n\nexport interface StakePool {\n  accountType: AccountType;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakeDepositAuthority: PublicKey;\n  stakeWithdrawBumpSeed: number;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerFeeAccount: PublicKey;\n  tokenProgramId: PublicKey;\n  totalLamports: BN;\n  poolTokenSupply: BN;\n  lastUpdateEpoch: BN;\n  lockup: Lockup;\n  epochFee: Fee;\n  nextEpochFee?: Fee | undefined;\n  preferredDepositValidatorVoteAddress?: PublicKey | undefined;\n  preferredWithdrawValidatorVoteAddress?: PublicKey | undefined;\n  stakeDepositFee: Fee;\n  stakeWithdrawalFee: Fee;\n  nextStakeWithdrawalFee?: Fee | undefined;\n  stakeReferralFee: number;\n  solDepositAuthority?: PublicKey | undefined;\n  solDepositFee: Fee;\n  solReferralFee: number;\n  solWithdrawAuthority?: PublicKey | undefined;\n  solWithdrawalFee: Fee;\n  nextSolWithdrawalFee?: Fee | undefined;\n  lastEpochPoolTokenSupply: BN;\n  lastEpochTotalLamports: BN;\n}\n\nexport const StakePoolLayout = struct<StakePool>([\n  u8('accountType'),\n  publicKey('manager'),\n  publicKey('staker'),\n  publicKey('stakeDepositAuthority'),\n  u8('stakeWithdrawBumpSeed'),\n  publicKey('validatorList'),\n  publicKey('reserveStake'),\n  publicKey('poolMint'),\n  publicKey('managerFeeAccount'),\n  publicKey('tokenProgramId'),\n  u64('totalLamports'),\n  u64('poolTokenSupply'),\n  u64('lastUpdateEpoch'),\n  lockup('lockup'),\n  fee('epochFee'),\n  futureEpoch(fee(), 'nextEpochFee'),\n  option(publicKey(), 'preferredDepositValidatorVoteAddress'),\n  option(publicKey(), 'preferredWithdrawValidatorVoteAddress'),\n  fee('stakeDepositFee'),\n  fee('stakeWithdrawalFee'),\n  futureEpoch(fee(), 'nextStakeWithdrawalFee'),\n  u8('stakeReferralFee'),\n  option(publicKey(), 'solDepositAuthority'),\n  fee('solDepositFee'),\n  u8('solReferralFee'),\n  option(publicKey(), 'solWithdrawAuthority'),\n  fee('solWithdrawalFee'),\n  futureEpoch(fee(), 'nextSolWithdrawalFee'),\n  u64('lastEpochPoolTokenSupply'),\n  u64('lastEpochTotalLamports'),\n]);\n\n// 1 + 32*3 + 1 + 32*5 + 8*3 + (8+8+32) + 16 + 17  + 33*2 + 16*2 + 17 + 1 + 33 + 16 + 1 + 33 + 16 + 17 + 8 + 8\nStakePoolLayout.span = 611;\n\nexport enum ValidatorStakeInfoStatus {\n  Active,\n  DeactivatingTransient,\n  ReadyForRemoval,\n}\n\nexport interface ValidatorStakeInfo {\n  status: ValidatorStakeInfoStatus;\n  voteAccountAddress: PublicKey;\n  activeStakeLamports: BN;\n  transientStakeLamports: BN;\n  transientSeedSuffixStart: BN;\n  transientSeedSuffixEnd: BN;\n  lastUpdateEpoch: BN;\n}\n\nexport const ValidatorStakeInfoLayout = struct<ValidatorStakeInfo>([\n  /// Amount of active stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('activeStakeLamports'),\n  /// Amount of transient stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('transientStakeLamports'),\n  /// Last epoch the active and transient stake lamports fields were updated\n  u64('lastUpdateEpoch'),\n  /// Start of the validator transient account seed suffixes\n  u64('transientSeedSuffixStart'),\n  /// End of the validator transient account seed suffixes\n  u64('transientSeedSuffixEnd'),\n  /// Status of the validator stake account\n  u8('status'),\n  /// Validator vote account address\n  publicKey('voteAccountAddress'),\n]);\n\nexport interface ValidatorList {\n  /// Account type, must be ValidatorList currently\n  accountType: number;\n  /// Maximum allowable number of validators\n  maxValidators: number;\n  /// List of stake info for each validator in the pool\n  validators: ValidatorStakeInfo[];\n}\n\nexport const ValidatorListLayout = struct<ValidatorList>([\n  u8('accountType'),\n  u32('maxValidators'),\n  vec(ValidatorStakeInfoLayout, 'validators'),\n]);\n\n// 1 + 4 + 4\nValidatorListLayout.span = 9;\n","import type { Connection, PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport { Keypair, StakeProgram, SystemProgram } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport type { WithdrawAccount } from '../index';\nimport type { Fee, StakePool, ValidatorList } from '../layouts';\nimport { ValidatorListLayout, ValidatorStakeInfoStatus } from '../layouts';\nimport { MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from '../constants';\nimport { lamportsToSol } from './math';\nimport { findStakeProgramAddress, findTransientStakeProgramAddress } from './program-address';\n\nexport async function getValidatorListAccount(connection: Connection, pubkey: PublicKey) {\n  const account = await connection.getAccountInfo(pubkey);\n  if (!account) {\n    throw new Error('Invalid validator list account');\n  }\n  return {\n    pubkey,\n    account: {\n      data: ValidatorListLayout.decode(account?.data) as ValidatorList,\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\nexport interface ValidatorAccount {\n  type: 'preferred' | 'active' | 'transient' | 'reserve';\n  voteAddress?: PublicKey | undefined;\n  stakeAddress: PublicKey;\n  lamports: BN;\n}\n\nexport async function prepareWithdrawAccounts(\n  connection: Connection,\n  stakePool: StakePool,\n  stakePoolAddress: PublicKey,\n  amount: BN,\n  compareFn?: (a: ValidatorAccount, b: ValidatorAccount) => number,\n  skipFee?: boolean,\n): Promise<WithdrawAccount[]> {\n  const validatorListAcc = await connection.getAccountInfo(stakePool.validatorList);\n  const validatorList = ValidatorListLayout.decode(\n    Buffer.from(validatorListAcc?.data ?? []),\n  ) as ValidatorList;\n\n  if (!validatorList?.validators || validatorList?.validators.length == 0) {\n    throw new Error('No accounts found');\n  }\n\n  const minBalanceForRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n  const minBalance = new BN(minBalanceForRentExemption + MINIMUM_ACTIVE_STAKE);\n\n  let accounts = [] as Array<{\n    type: 'preferred' | 'active' | 'transient' | 'reserve';\n    voteAddress?: PublicKey | undefined;\n    stakeAddress: PublicKey;\n    lamports: BN;\n  }>;\n\n  // Prepare accounts\n  for (const validator of validatorList.validators) {\n    if (validator.status !== ValidatorStakeInfoStatus.Active) {\n      continue;\n    }\n\n    const stakeAccountAddress = findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      validator.voteAccountAddress,\n      stakePoolAddress,\n    );\n\n    if (!validator.activeStakeLamports.isZero()) {\n      const isPreferred = stakePool?.preferredWithdrawValidatorVoteAddress?.equals(\n        validator.voteAccountAddress,\n      );\n      accounts.push({\n        type: isPreferred ? 'preferred' : 'active',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: stakeAccountAddress,\n        lamports: validator.activeStakeLamports,\n      });\n    }\n\n    const transientStakeLamports = validator.transientStakeLamports.sub(minBalance);\n    if (transientStakeLamports.gt(new BN(0))) {\n      const transientStakeAccountAddress = findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      accounts.push({\n        type: 'transient',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: transientStakeAccountAddress,\n        lamports: transientStakeLamports,\n      });\n    }\n  }\n\n  // Sort from highest to lowest balance\n  accounts = accounts.sort(compareFn ? compareFn : (a, b) => b.lamports.sub(a.lamports).toNumber());\n\n  const reserveStake = await connection.getAccountInfo(stakePool.reserveStake);\n  const reserveStakeBalance = new BN((reserveStake?.lamports ?? 0) - minBalanceForRentExemption);\n  if (reserveStakeBalance.gt(new BN(0))) {\n    accounts.push({\n      type: 'reserve',\n      stakeAddress: stakePool.reserveStake,\n      lamports: reserveStakeBalance,\n    });\n  }\n\n  // Prepare the list of accounts to withdraw from\n  const withdrawFrom: WithdrawAccount[] = [];\n  let remainingAmount = new BN(amount);\n\n  const fee = stakePool.stakeWithdrawalFee;\n  const inverseFee: Fee = {\n    numerator: fee.denominator.sub(fee.numerator),\n    denominator: fee.denominator,\n  };\n\n  for (const type of ['preferred', 'active', 'transient', 'reserve']) {\n    const filteredAccounts = accounts.filter((a) => a.type == type);\n\n    for (const { stakeAddress, voteAddress, lamports } of filteredAccounts) {\n      if (lamports.lte(minBalance) && type == 'transient') {\n        continue;\n      }\n\n      let availableForWithdrawal = calcPoolTokensForDeposit(stakePool, lamports);\n\n      if (!skipFee && !inverseFee.numerator.isZero()) {\n        availableForWithdrawal = availableForWithdrawal\n          .mul(inverseFee.denominator)\n          .div(inverseFee.numerator);\n      }\n\n      const poolAmount = BN.min(availableForWithdrawal, remainingAmount);\n      if (poolAmount.lte(new BN(0))) {\n        continue;\n      }\n\n      // Those accounts will be withdrawn completely with `claim` instruction\n      withdrawFrom.push({ stakeAddress, voteAddress, poolAmount });\n      remainingAmount = remainingAmount.sub(poolAmount);\n\n      if (remainingAmount.isZero()) {\n        break;\n      }\n    }\n\n    if (remainingAmount.isZero()) {\n      break;\n    }\n  }\n\n  // Not enough stake to withdraw the specified amount\n  if (remainingAmount.gt(new BN(0))) {\n    throw new Error(\n      `No stake accounts found in this pool with enough balance to withdraw ${lamportsToSol(\n        amount,\n      )} pool tokens.`,\n    );\n  }\n\n  return withdrawFrom;\n}\n\n/**\n * Calculate the pool tokens that should be minted for a deposit of `stakeLamports`\n */\nexport function calcPoolTokensForDeposit(stakePool: StakePool, stakeLamports: BN): BN {\n  if (stakePool.poolTokenSupply.isZero() || stakePool.totalLamports.isZero()) {\n    return stakeLamports;\n  }\n  const numerator = stakeLamports.mul(stakePool.poolTokenSupply);\n  return numerator.div(stakePool.totalLamports);\n}\n\n/**\n * Calculate lamports amount on withdrawal\n */\nexport function calcLamportsWithdrawAmount(stakePool: StakePool, poolTokens: BN): BN {\n  const numerator = poolTokens.mul(stakePool.totalLamports);\n  const denominator = stakePool.poolTokenSupply;\n  if (numerator.lt(denominator)) {\n    return new BN(0);\n  }\n  return numerator.div(denominator);\n}\n\nexport function newStakeAccount(\n  feePayer: PublicKey,\n  instructions: TransactionInstruction[],\n  lamports: number,\n): Keypair {\n  // Account for tokens not specified, creating one\n  const stakeReceiverKeypair = Keypair.generate();\n  console.log(`Creating account to receive stake ${stakeReceiverKeypair.publicKey}`);\n\n  instructions.push(\n    // Creating new account\n    SystemProgram.createAccount({\n      fromPubkey: feePayer,\n      newAccountPubkey: stakeReceiverKeypair.publicKey,\n      lamports,\n      space: StakeProgram.space,\n      programId: StakeProgram.programId,\n    }),\n  );\n\n  return stakeReceiverKeypair;\n}\n","import { Buffer } from 'buffer';\nimport type { Layout } from '@coral-xyz/borsh';\n\n/**\n * @internal\n */\nexport type InstructionType<T = any> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: Layout<T>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<T = any>(type: InstructionType<T>, fields?: any): Buffer {\n  const allocLength = type.layout.span;\n  const data = Buffer.alloc(allocLength < 0 ? 1024 : allocLength);\n  const layoutFields = Object.assign({ instruction: type.index }, fields);\n  const offset = type.layout.encode(layoutFields, data);\n  return Buffer.from(new Uint8Array(data.buffer).slice(0, offset));\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","export * from './layout';\nexport * from './math';\nexport * from './program-address';\nexport * from './stake';\nexport * from './instruction';\n\nexport function arrayChunk(array: any[], size: number): any[] {\n  const result = [];\n  for (let i = 0; i < array.length; i += size) {\n    result.push(array.slice(i, i + size));\n  }\n  return result;\n}\n","import type { PublicKey } from '@solana/web3.js';\nimport {\n  STAKE_CONFIG_ID,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { option, publicKey, struct, u32, u64, u8 } from '@coral-xyz/borsh';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport BN from 'bn.js';\nimport {\n  METADATA_MAX_NAME_LENGTH,\n  METADATA_MAX_SYMBOL_LENGTH,\n  METADATA_MAX_URI_LENGTH,\n  METADATA_PROGRAM_ID,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\nimport type { InstructionType } from './utils';\nimport { encodeData } from './utils';\nimport { fee, Fee } from './layouts';\nimport { Buffer } from 'buffer';\nimport { blob } from 'buffer-layout';\n\n/**\n * An enumeration of valid StakePoolInstructionType's\n */\nexport type StakePoolInstructionType =\n  | 'Initialize'\n  | 'AddValidatorToPool'\n  | 'RemoveValidatorFromPool'\n  | 'DecreaseValidatorStake'\n  | 'IncreaseValidatorStake'\n  | 'SetPreferredValidator'\n  | 'UpdateValidatorListBalance'\n  | 'UpdateStakePoolBalance'\n  | 'CleanupRemovedValidatorEntries'\n  | 'DepositStake'\n  | 'WithdrawStake'\n  | 'SetManager'\n  | 'SetFee'\n  | 'SetStaker'\n  | 'DepositSol'\n  | 'SetFundingAuthority'\n  | 'WithdrawSol'\n  | 'IncreaseAdditionalValidatorStake'\n  | 'DecreaseAdditionalValidatorStake'\n  | 'DecreaseValidatorStakeWithReserve'\n  | 'Redelegate'\n  | 'DepositStakeWithSlippage'\n  | 'WithdrawStakeWithSlippage'\n  | 'DepositSolWithSlippage'\n  | 'WithdrawSolWithSlippage';\n\n// 'UpdateTokenMetadata' and 'CreateTokenMetadata' have dynamic layouts\n\nconst MOVE_STAKE_LAYOUT = struct([u8('instruction'), u64('lamports'), u64('transientStakeSeed')]);\n\nexport function tokenMetadataLayout(\n  instruction: number,\n  nameLength: number,\n  symbolLength: number,\n  uriLength: number,\n) {\n  if (nameLength > METADATA_MAX_NAME_LENGTH) {\n    throw new Error(`maximum token name length is ${METADATA_MAX_NAME_LENGTH} characters`);\n  }\n\n  if (symbolLength > METADATA_MAX_SYMBOL_LENGTH) {\n    throw new Error(`maximum token symbol length is ${METADATA_MAX_SYMBOL_LENGTH} characters`);\n  }\n\n  if (uriLength > METADATA_MAX_URI_LENGTH) {\n    throw new Error(`maximum token uri length is ${METADATA_MAX_URI_LENGTH} characters`);\n  }\n\n  return {\n    index: instruction,\n    layout: struct([\n      u8('instruction'),\n      u32('nameLen'),\n      blob(nameLength, 'name'),\n      u32('symbolLen'),\n      blob(symbolLength, 'symbol'),\n      u32('uriLen'),\n      blob(uriLength, 'uri'),\n    ]),\n  };\n}\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_POOL_INSTRUCTION_LAYOUTS: {\n  [type in StakePoolInstructionType]: InstructionType;\n} = Object.freeze({\n  /// Initializes a new StakePool.\n  Initialize: {\n    index: 0,\n    layout: struct([\n      u8('instruction'),\n      fee('fee'),\n      fee('withdrawalFee'),\n      fee('depositFee'),\n      u8('referralFee'),\n      u32('maxValidators'),\n    ]),\n  },\n  /// (Staker only) Adds stake account delegated to validator to the pool's list of managed validators.\n  AddValidatorToPool: {\n    index: 1,\n    layout: struct([\n      u8('instruction'),\n      // Optional non-zero u32 seed used for generating the validator stake address\n      u32('seed'),\n    ]),\n  },\n  /// (Staker only) Removes validator from the pool, deactivating its stake.\n  RemoveValidatorFromPool: {\n    index: 2,\n    layout: struct([u8('instruction')]),\n  },\n  /// (Staker only) Decrease active stake on a validator, eventually moving it to the reserve.\n  DecreaseValidatorStake: {\n    index: 3,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  /// (Staker only) Increase stake on a validator from the reserve account.\n  IncreaseValidatorStake: {\n    index: 4,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  /// (Staker only) Set the preferred deposit or withdraw stake account for the stake pool.\n  SetPreferredValidator: {\n    index: 5,\n    layout: struct([\n      u8('instruction'),\n      u8('validatorType'),\n      option(publicKey(), 'validatorVoteAddress'),\n    ]),\n  },\n  /// Updates balances of validator and transient stake accounts in the pool.\n  UpdateValidatorListBalance: {\n    index: 6,\n    layout: struct([u8('instruction'), u32('startIndex'), u8('noMerge')]),\n  },\n  /// Updates total pool balance based on balances in the reserve and validator list.\n  UpdateStakePoolBalance: {\n    index: 7,\n    layout: struct([u8('instruction')]),\n  },\n  /// Cleans up validator stake account entries marked as `ReadyForRemoval`.\n  CleanupRemovedValidatorEntries: {\n    index: 8,\n    layout: struct([u8('instruction')]),\n  },\n  /// Deposit some stake into the pool. The output is a \"pool\" token\n  /// representing ownership into the pool. Inputs are converted to the\n  /// current ratio.\n  DepositStake: {\n    index: 9,\n    layout: struct([u8('instruction')]),\n  },\n  /// Withdraw the token from the pool at the current ratio.\n  WithdrawStake: {\n    index: 10,\n    layout: struct([u8('instruction'), u64('poolTokens')]),\n  },\n  /// (Manager only) Update manager.\n  SetManager: {\n    index: 11,\n    layout: struct([u8('instruction')]),\n  },\n  /// (Manager only) Update fee.\n  SetFee: {\n    index: 12,\n    layout: struct([\n      u8('instruction'),\n      // Type of fee to update and value to update it to\n      u64('fee'),\n    ]),\n  },\n  /// (Manager or staker only) Update staker.\n  SetStaker: {\n    index: 13,\n    layout: struct([u8('instruction')]),\n  },\n  /// Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n  /// representing ownership into the pool. Inputs are converted to the current ratio.\n  DepositSol: {\n    index: 14,\n    layout: struct([u8('instruction'), u64('lamports')]),\n  },\n  /// (Manager only) Update SOL deposit, stake deposit, or SOL withdrawal authority.\n  SetFundingAuthority: {\n    index: 15,\n    layout: struct([u8('instruction'), u8('fundingType')]),\n  },\n  /// Withdraw SOL directly from the pool's reserve account. Fails if the\n  /// reserve does not have enough SOL.\n  WithdrawSol: {\n    index: 16,\n    layout: struct([u8('instruction'), u64('poolTokens')]),\n  },\n  /// (Staker only) Increase stake on a validator again in an epoch.\n  IncreaseAdditionalValidatorStake: {\n    index: 19,\n    layout: struct<any>([\n      u8('instruction'),\n      u64('lamports'),\n      u64('transientStakeSeed'),\n      u64('ephemeralStakeSeed'),\n    ]),\n  },\n  /// (Staker only) Decrease active stake again from a validator, eventually\n  /// moving it to the reserve.\n  DecreaseAdditionalValidatorStake: {\n    index: 20,\n    layout: struct<any>([\n      u8('instruction'),\n      u64('lamports'),\n      u64('transientStakeSeed'),\n      u64('ephemeralStakeSeed'),\n    ]),\n  },\n  /// (Staker only) Decrease active stake on a validator, eventually moving it\n  /// to the reserve.\n  DecreaseValidatorStakeWithReserve: {\n    index: 21,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  /// (Staker only) Redelegate active stake on a validator, eventually moving\n  /// it to another.\n  Redelegate: {\n    index: 22,\n    layout: struct([\n      u8('instruction'),\n      /// Amount of lamports to redelegate\n      u64('lamports'),\n      /// Seed used to create source transient stake account\n      u64('sourceTransientStakeSeed'),\n      /// Seed used to create destination ephemeral account.\n      u64('ephemeralStakeSeed'),\n      /// Seed used to create destination transient stake account. If there is\n      /// already transient stake, this must match the current seed, otherwise\n      /// it can be anything\n      u64('destinationTransientStakeSeed'),\n    ]),\n  },\n  /// Deposit some stake into the pool, with a specified slippage\n  /// constraint. The output is a \"pool\" token representing ownership\n  /// into the pool. Inputs are converted at the current ratio.\n  DepositStakeWithSlippage: {\n    index: 23,\n    layout: struct([\n      u8('instruction'),\n      /// Minimum amount of pool tokens that must be received\n      u64('minimumPoolTokensOut'),\n    ]),\n  },\n  /// Withdraw the token from the pool at the current ratio, specifying a\n  /// minimum expected output lamport amount.\n  WithdrawStakeWithSlippage: {\n    index: 24,\n    layout: struct([\n      u8('instruction'),\n      /// Pool tokens to burn in exchange for lamports\n      u64('poolTokensIn'),\n      /// Minimum amount of lamports that must be received\n      u64('minimumLamportsOut'),\n    ]),\n  },\n  /// Deposit SOL directly into the pool's reserve account, with a\n  /// specified slippage constraint. The output is a \"pool\" token\n  /// representing ownership into the pool. Inputs are converted at the\n  /// current ratio.\n  DepositSolWithSlippage: {\n    index: 25,\n    layout: struct([\n      u8('instruction'),\n      /// Amount of lamports to deposit into the reserve\n      u64('lamportsIn'),\n      /// Minimum amount of pool tokens that must be received\n      u64('minimumPoolTokensOut'),\n    ]),\n  },\n  /// Withdraw SOL directly from the pool's reserve account. Fails if the\n  /// reserve does not have enough SOL or if the slippage constraint is not\n  /// met.\n  WithdrawSolWithSlippage: {\n    index: 26,\n    layout: struct([\n      u8('instruction'),\n      /// Pool tokens to burn in exchange for lamports\n      u64('poolTokensIn'),\n      /// Minimum amount of lamports that must be received\n      u64('minimumLamportsOut'),\n    ]),\n  },\n});\n\nexport interface InitializeParams {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerPoolAccount: PublicKey;\n  depositAuthority?: PublicKey;\n  fee: Fee;\n  withdrawalFee: Fee;\n  depositFee: Fee;\n  referralFee: number;\n  maxValidators: number;\n}\n\nexport interface AddValidatorToPoolParams {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  reserveStake: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  /// (Optional) Seed to used to create the validator stake account.\n  seed?: number;\n}\n\nexport interface RemoveValidatorFromPoolParams {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n}\n\n/**\n * Cleans up validator stake account entries marked as `ReadyForRemoval`\n */\nexport interface CleanupRemovedValidatorEntriesParams {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n}\n\n/**\n * Updates balances of validator and transient stake accounts in the pool.\n */\nexport interface UpdateValidatorListBalanceParams {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  validatorAndTransientStakePairs: PublicKey[];\n  startIndex: number;\n  noMerge: boolean;\n}\n\n/**\n * Updates total pool balance based on balances in the reserve and validator list.\n */\nexport interface UpdateStakePoolBalanceParams {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n}\n\n/**\n * (Staker only) Decrease active stake on a validator, eventually moving it to the reserve\n */\nexport interface DecreaseValidatorStakeParams {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number | BN;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number | BN;\n}\n\nexport interface DecreaseValidatorStakeWithReserveParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n}\n\nexport interface DecreaseAdditionalValidatorStakeParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number | BN;\n}\n\n/**\n * (Staker only) Increase stake on a validator from the reserve account.\n */\nexport interface IncreaseValidatorStakeParams {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  transientStake: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number | BN;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number | BN;\n}\n\nexport interface IncreaseAdditionalValidatorStakeParams extends IncreaseValidatorStakeParams {\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number | BN;\n}\n\n/**\n * Deposits a stake account into the pool in exchange for pool tokens\n */\nexport interface DepositStakeParams {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  depositAuthority: PublicKey;\n  withdrawAuthority: PublicKey;\n  depositStake: PublicKey;\n  validatorStake: PublicKey;\n  reserveStake: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n}\n\n/**\n * Withdraws a stake account from the pool in exchange for pool tokens\n */\nexport interface WithdrawStakeParams {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorStake: PublicKey;\n  destinationStake: PublicKey;\n  destinationStakeAuthority: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  sourcePoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number | BN;\n  minimumLamportsOut?: number | BN | undefined;\n}\n\n/**\n * Withdraw sol instruction params\n */\nexport interface WithdrawSolParams {\n  stakePool: PublicKey;\n  sourcePoolAccount: PublicKey;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  destinationSystemAccount: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  solWithdrawAuthority?: PublicKey | undefined;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number | BN;\n  minimumLamportsOut?: number | BN | undefined;\n}\n\n/**\n * Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n * representing ownership into the pool. Inputs are converted to the current ratio.\n */\nexport interface DepositSolParams {\n  stakePool: PublicKey;\n  depositAuthority?: PublicKey | undefined;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  fundingAccount: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n  lamports: number | BN;\n  minimumPoolTokensOut?: number | BN | undefined;\n}\n\nexport interface UpdateTokenMetadataParams {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n}\n\nexport interface CreateTokenMetadataParams extends UpdateTokenMetadataParams {\n  poolMint: PublicKey;\n  payer: PublicKey;\n}\n\nexport interface RedelegateParams {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  sourceValidatorStake: PublicKey;\n  sourceTransientStake: PublicKey;\n  ephemeralStake: PublicKey;\n  destinationTransientStake: PublicKey;\n  destinationValidatorStake: PublicKey;\n  validator: PublicKey;\n  // Amount of lamports to redelegate\n  lamports: number | BN;\n  // Seed used to create source transient stake account\n  sourceTransientStakeSeed: number | BN;\n  // Seed used to create destination ephemeral account\n  ephemeralStakeSeed: number | BN;\n  // Seed used to create destination transient stake account. If there is\n  // already transient stake, this must match the current seed, otherwise\n  // it can be anything\n  destinationTransientStakeSeed: number | BN;\n}\n\nexport interface SetManagerParams {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  newManager: PublicKey;\n  newFeeReceiver: PublicKey;\n}\n\nexport interface SetFeeParams {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  fee: number | BN;\n}\n\nexport interface SetStakerParams {\n  stakePool: PublicKey;\n  setStakerAuthority: PublicKey;\n  newStaker: PublicKey;\n}\n\nexport interface SetFundingAuthorityParams {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  newSolDepositAuthority?: PublicKey | undefined;\n  fundingType: number;\n}\n\nexport interface SetPreferredValidatorParams {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  validatorList: PublicKey;\n  validatorVote?: PublicKey | undefined;\n  validatorType: number;\n}\n\n/**\n * Stake Pool Instruction class\n */\nexport class StakePoolInstruction {\n  /**\n   * Creates an 'initialize' instruction.\n   */\n  static initialize(params: InitializeParams) {\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.Initialize, {\n      fee: params.fee,\n      withdrawalFee: params.withdrawalFee,\n      depositFee: params.depositFee,\n      referralFee: params.referralFee,\n      maxValidators: params.maxValidators,\n    });\n\n    const keys = [\n      { pubkey: params.stakePool, isSigner: false, isWritable: true },\n      { pubkey: params.manager, isSigner: true, isWritable: false },\n      { pubkey: params.staker, isSigner: false, isWritable: false },\n      { pubkey: params.stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: params.validatorList, isSigner: false, isWritable: true },\n      { pubkey: params.reserveStake, isSigner: false, isWritable: false },\n      { pubkey: params.poolMint, isSigner: false, isWritable: true },\n      { pubkey: params.managerPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (params.depositAuthority) {\n      keys.push({ pubkey: params.depositAuthority, isSigner: true, isWritable: false });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to add a validator to the pool.\n   */\n  static addValidatorToPool(params: AddValidatorToPoolParams) {\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.AddValidatorToPool, {\n      seed: params.seed,\n    });\n\n    const keys = [\n      { pubkey: params.stakePool, isSigner: false, isWritable: true },\n      { pubkey: params.staker, isSigner: true, isWritable: false },\n      { pubkey: params.reserveStake, isSigner: false, isWritable: true },\n      { pubkey: params.withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: params.validatorList, isSigner: false, isWritable: true },\n      { pubkey: params.validatorStake, isSigner: false, isWritable: true },\n      { pubkey: params.validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to remove a validator from the pool.\n   */\n  static removeValidatorFromPool(params: RemoveValidatorFromPoolParams) {\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.RemoveValidatorFromPool);\n\n    const keys = [\n      { pubkey: params.stakePool, isSigner: false, isWritable: true },\n      { pubkey: params.staker, isSigner: true, isWritable: false },\n      { pubkey: params.withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: params.validatorList, isSigner: false, isWritable: true },\n      { pubkey: params.validatorStake, isSigner: false, isWritable: true },\n      { pubkey: params.transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update a set of validators in the stake pool.\n   */\n  static updateValidatorListBalance(\n    params: UpdateValidatorListBalanceParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      startIndex,\n      noMerge,\n      validatorAndTransientStakePairs,\n    } = params;\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateValidatorListBalance, {\n      startIndex,\n      noMerge: noMerge ? 1 : 0,\n    });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      ...validatorAndTransientStakePairs.map((pubkey) => ({\n        pubkey,\n        isSigner: false,\n        // https://github.com/solana-labs/solana-program-library/blob/f36c2fb5a24bd87e04c60a509aec94304798c1a3/stake-pool/program/src/instruction.rs#L238C22-L238C22\n        isWritable: true, // TODO: false ?\n      })),\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update the overall stake pool balance.\n   */\n  static updateStakePoolBalance(params: UpdateStakePoolBalanceParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      managerFeeAccount,\n      poolMint,\n    } = params;\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateStakePoolBalance);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: false },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to clean up removed validator entries.\n   */\n  static cleanupRemovedValidatorEntries(\n    params: CleanupRemovedValidatorEntriesParams,\n  ): TransactionInstruction {\n    const { stakePool, validatorList } = params;\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.CleanupRemovedValidatorEntries);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseValidatorStake(params: IncreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseValidatorStake, {\n      lamports: new BN(lamports),\n      transientStakeSeed: new BN(transientStakeSeed),\n    });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseAdditionalValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseAdditionalValidatorStake(\n    params: IncreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    } = params;\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseAdditionalValidatorStake, {\n      lamports: new BN(lamports),\n      transientStakeSeed: new BN(transientStakeSeed),\n      ephemeralStakeSeed: new BN(ephemeralStakeSeed),\n    });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStake` instruction (rebalance from validator account to\n   * transient account)\n   */\n  static decreaseValidatorStake(params: DecreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStake, {\n      lamports: new BN(lamports),\n      transientStakeSeed: new BN(transientStakeSeed),\n    });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStakeWithReserve` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseValidatorStakeWithReserve(\n    params: DecreaseValidatorStakeWithReserveParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStakeWithReserve, {\n      lamports: new BN(lamports),\n      transientStakeSeed: new BN(transientStakeSeed),\n    });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseAdditionalValidatorStake` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseAdditionalValidatorStake(\n    params: DecreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n      ephemeralStakeSeed,\n      ephemeralStake,\n    } = params;\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseAdditionalValidatorStake, {\n      lamports: new BN(lamports),\n      transientStakeSeed: new BN(transientStakeSeed),\n      ephemeralStakeSeed: new BN(ephemeralStakeSeed),\n    });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit a stake account into a stake pool.\n   */\n  static depositStake(params: DepositStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      depositAuthority,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      reserveStake,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n    } = params;\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: depositAuthority, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: depositStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit SOL into a stake pool.\n   */\n  static depositSol(params: DepositSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      depositAuthority,\n      reserveStake,\n      fundingAccount,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n      lamports,\n      minimumPoolTokensOut,\n    } = params;\n\n    const data =\n      minimumPoolTokensOut !== undefined\n        ? encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSolWithSlippage, {\n            lamports: new BN(lamports),\n            minimumPoolTokensOut: new BN(minimumPoolTokensOut),\n          })\n        : encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol, {\n            lamports: new BN(lamports),\n          });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: fundingAccount, isSigner: true, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (depositAuthority) {\n      keys.push({\n        pubkey: depositAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw active stake from a stake pool.\n   */\n  static withdrawStake(params: WithdrawStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      withdrawAuthority,\n      validatorStake,\n      destinationStake,\n      destinationStakeAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      managerFeeAccount,\n      poolMint,\n      poolTokens,\n      minimumLamportsOut,\n    } = params;\n\n    const data =\n      minimumLamportsOut !== undefined\n        ? encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawStakeWithSlippage, {\n            poolTokens: new BN(poolTokens),\n            minimumLamportsOut: new BN(minimumLamportsOut),\n          })\n        : encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawStake, {\n            poolTokens: new BN(poolTokens),\n          });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStakeAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw SOL from a stake pool.\n   */\n  static withdrawSol(params: WithdrawSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      reserveStake,\n      destinationSystemAccount,\n      managerFeeAccount,\n      solWithdrawAuthority,\n      poolMint,\n      poolTokens,\n      minimumLamportsOut,\n    } = params;\n\n    const data =\n      minimumLamportsOut !== undefined\n        ? encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawSolWithSlippage, {\n            poolTokens: new BN(poolTokens),\n            minimumPoolTokensOut: new BN(minimumLamportsOut),\n          })\n        : encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawSol, {\n            poolTokens: new BN(poolTokens),\n          });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationSystemAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (solWithdrawAuthority) {\n      keys.push({\n        pubkey: solWithdrawAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to create metadata\n   * using the mpl token metadata program for the pool token\n   */\n  static createTokenMetadata(params: CreateTokenMetadataParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      tokenMetadata,\n      manager,\n      payer,\n      poolMint,\n      name,\n      symbol,\n      uri,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: poolMint, isSigner: false, isWritable: false },\n      { pubkey: payer, isSigner: true, isWritable: true },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(17, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to update metadata\n   * in the mpl token metadata program account for the pool token\n   */\n  static updateTokenMetadata(params: UpdateTokenMetadataParams): TransactionInstruction {\n    const { stakePool, withdrawAuthority, tokenMetadata, manager, name, symbol, uri } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(18, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `Redelegate` instruction (rebalance from one validator account to another)\n   * @param params\n   */\n  static redelegate(params: RedelegateParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      stakePoolWithdrawAuthority,\n      validatorList,\n      reserveStake,\n      sourceValidatorStake,\n      sourceTransientStake,\n      ephemeralStake,\n      destinationTransientStake,\n      destinationValidatorStake,\n      validator,\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: sourceValidatorStake, isSigner: false, isWritable: true },\n      { pubkey: sourceTransientStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: destinationTransientStake, isSigner: false, isWritable: true },\n      { pubkey: destinationValidatorStake, isSigner: false, isWritable: false },\n      { pubkey: validator, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.Redelegate, {\n      lamports: new BN(lamports),\n      sourceTransientStakeSeed: new BN(sourceTransientStakeSeed),\n      ephemeralStakeSeed: new BN(ephemeralStakeSeed),\n      destinationTransientStakeSeed: new BN(destinationTransientStakeSeed),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a 'SetManager' instruction.\n   * @param params\n   */\n  static setManager(params: SetManagerParams): TransactionInstruction {\n    const { stakePool, manager, newManager, newFeeReceiver } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: newManager, isSigner: true, isWritable: false },\n      { pubkey: newFeeReceiver, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.SetManager);\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a 'SetFee' instruction.\n   * @param params\n   */\n  static setFee(params: SetFeeParams): TransactionInstruction {\n    const { stakePool, manager, fee } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: manager, isSigner: true, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.SetFee, {\n      fee: new BN(fee),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a 'SetStaker' instruction.\n   * @param params\n   */\n  static setStaker(params: SetStakerParams): TransactionInstruction {\n    const { stakePool, setStakerAuthority, newStaker } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: setStakerAuthority, isSigner: true, isWritable: false },\n      { pubkey: newStaker, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.SetStaker);\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a 'SetFundingAuthority' instruction.\n   * @param params\n   */\n  static setFundingAuthority(params: SetFundingAuthorityParams): TransactionInstruction {\n    const { stakePool, manager, newSolDepositAuthority, fundingType } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: manager, isSigner: true, isWritable: false },\n    ];\n\n    if (newSolDepositAuthority) {\n      keys.push({ pubkey: newSolDepositAuthority, isSigner: false, isWritable: false });\n    }\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.SetFundingAuthority, {\n      fundingType,\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a 'SetPreferredValidator' instruction.\n   * @param params\n   */\n  static setPreferredValidator(params: SetPreferredValidatorParams): TransactionInstruction {\n    const { stakePool, staker, validatorList, validatorVote, validatorType } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.SetPreferredValidator, {\n      validatorVoteAddress: validatorVote,\n      validatorType,\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n}\n","import type { AccountInfo, Connection, Signer, TransactionInstruction } from '@solana/web3.js';\nimport {\n  Keypair,\n  PublicKey,\n  StakeAuthorizationLayout,\n  StakeProgram,\n  SystemProgram,\n} from '@solana/web3.js';\nimport {\n  createApproveInstruction,\n  createAssociatedTokenAccountIdempotentInstruction,\n  getAccount,\n  getAssociatedTokenAddressSync,\n} from '@solana/spl-token';\nimport { create } from 'superstruct';\nimport BN from 'bn.js';\nimport type { ValidatorAccount } from './utils';\nimport {\n  arrayChunk,\n  calcLamportsWithdrawAmount,\n  findEphemeralStakeProgramAddress,\n  findStakeProgramAddress,\n  findMetadataAddress,\n  findTransientStakeProgramAddress,\n  findWithdrawAuthorityProgramAddress,\n  getValidatorListAccount,\n  lamportsToSol,\n  newStakeAccount,\n  prepareWithdrawAccounts,\n  solToLamports,\n} from './utils';\nimport { StakePoolInstruction } from './instructions';\nimport type { Fee, StakePool, ValidatorList } from './layouts';\nimport {\n  StakeAccount,\n  StakePoolLayout,\n  ValidatorListLayout,\n  ValidatorStakeInfoLayout,\n} from './layouts';\nimport {\n  DEFAULT_MAX_VALIDATORS,\n  MAX_VALIDATORS_TO_UPDATE,\n  MINIMUM_ACTIVE_STAKE,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\n\nexport type { StakePool, AccountType, ValidatorList, ValidatorStakeInfo } from './layouts';\nexport { STAKE_POOL_PROGRAM_ID } from './constants';\nexport * from './instructions';\n\nexport interface ValidatorListAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<ValidatorList>;\n}\n\nexport interface StakePoolAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<StakePool>;\n}\n\nexport interface WithdrawAccount {\n  stakeAddress: PublicKey;\n  voteAddress?: PublicKey;\n  poolAmount: BN;\n}\n\n/**\n * Wrapper class for a stake pool.\n * Each stake pool has a stake pool account and a validator list account.\n */\nexport interface StakePoolAccounts {\n  stakePool: StakePoolAccount | undefined;\n  validatorList: ValidatorListAccount | undefined;\n}\n\n/**\n * Retrieves and deserializes a StakePool account using a web3js connection and the stake pool address.\n * @param connection An active web3js connection.\n * @param stakePoolAddress The public key (address) of the stake pool account.\n */\nexport async function getStakePoolAccount(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n): Promise<StakePoolAccount> {\n  const account = await connection.getAccountInfo(stakePoolAddress);\n\n  if (!account) {\n    throw new Error('Invalid stake pool account');\n  }\n\n  return {\n    pubkey: stakePoolAddress,\n    account: {\n      data: StakePoolLayout.decode(account.data),\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\n/**\n * Retrieves and deserializes a Stake account using a web3js connection and the stake address.\n * @param connection An active web3js connection.\n * @param stakeAccount The public key (address) of the stake account.\n */\nexport async function getStakeAccount(\n  connection: Connection,\n  stakeAccount: PublicKey,\n): Promise<StakeAccount> {\n  const result = (await connection.getParsedAccountInfo(stakeAccount)).value;\n  if (!result || !('parsed' in result.data)) {\n    throw new Error('Invalid stake account');\n  }\n  const program = result.data.program;\n  if (program !== 'stake') {\n    throw new Error('Not a stake account');\n  }\n  return create(result.data.parsed, StakeAccount);\n}\n\n/**\n * Retrieves all StakePool and ValidatorList accounts that are running a particular StakePool program.\n * @param connection An active web3js connection.\n * @param stakePoolProgramAddress The public key (address) of the StakePool program.\n */\nexport async function getStakePoolAccounts(\n  connection: Connection,\n  stakePoolProgramAddress: PublicKey,\n): Promise<(StakePoolAccount | ValidatorListAccount)[] | undefined> {\n  const response = await connection.getProgramAccounts(stakePoolProgramAddress);\n\n  return response.map((a) => {\n    let decodedData: any;\n\n    if (a.account.data.readUInt8() === 1) {\n      try {\n        decodedData = StakePoolLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode StakeAccount. Error:', error);\n        decodedData = undefined;\n      }\n    } else if (a.account.data.readUInt8() === 2) {\n      try {\n        decodedData = ValidatorListLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode ValidatorList. Error:', error);\n        decodedData = undefined;\n      }\n    } else {\n      console.error(\n        `Could not decode. StakePoolAccount Enum is ${a.account.data.readUInt8()}, expected 1 or 2!`,\n      );\n      decodedData = undefined;\n    }\n\n    return {\n      pubkey: a.pubkey,\n      account: {\n        data: decodedData,\n        executable: a.account.executable,\n        lamports: a.account.lamports,\n        owner: a.account.owner,\n      },\n    };\n  });\n}\n\n/**\n * Creates instructions required to deposit stake to stake pool.\n */\nexport async function depositStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  authorizedPubkey: PublicKey,\n  validatorVote: PublicKey,\n  depositStake: PublicKey,\n  poolTokenReceiverAccount?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [];\n\n  const poolMint = stakePool.account.data.poolMint;\n\n  // Create token account if not specified\n  if (!poolTokenReceiverAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(poolMint, authorizedPubkey, true);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        authorizedPubkey,\n        associatedAddress,\n        authorizedPubkey,\n        poolMint,\n      ),\n    );\n    poolTokenReceiverAccount = associatedAddress;\n  }\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Staker,\n    }).instructions,\n  );\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Withdrawer,\n    }).instructions,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositStake({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      depositAuthority: stakePool.account.data.stakeDepositAuthority,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      referralPoolAccount: poolTokenReceiverAccount,\n      destinationPoolAccount: poolTokenReceiverAccount,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      poolMint,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to deposit sol to stake pool.\n */\nexport async function depositSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  from: PublicKey,\n  lamports: number,\n  destinationTokenAccount?: PublicKey,\n  referrerTokenAccount?: PublicKey,\n  depositAuthority?: PublicKey,\n) {\n  const fromBalance = await connection.getBalance(from, 'confirmed');\n  if (fromBalance < lamports) {\n    throw new Error(\n      `Not enough SOL to deposit into pool. Maximum deposit amount is ${lamportsToSol(\n        fromBalance,\n      )} SOL.`,\n    );\n  }\n\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n\n  // Ephemeral SOL account just to do the transfer\n  // const userSolTransfer = new Keypair();\n  // const signers: Signer[] = [userSolTransfer];\n  const signers: Signer[] = [];\n  const instructions: TransactionInstruction[] = [];\n\n  // // Create the ephemeral SOL account\n  // instructions.push(\n  //   SystemProgram.transfer({\n  //     fromPubkey: from,\n  //     toPubkey: userSolTransfer.publicKey,\n  //     lamports,\n  //   }),\n  // );\n\n  // Create token account if not specified\n  if (!destinationTokenAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(stakePool.poolMint, from, true);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        from,\n        associatedAddress,\n        from,\n        stakePool.poolMint,\n      ),\n    );\n    destinationTokenAccount = associatedAddress;\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositSol({\n      stakePool: stakePoolAddress,\n      reserveStake: stakePool.reserveStake,\n      fundingAccount: from,\n      // fundingAccount: userSolTransfer.publicKey,\n      destinationPoolAccount: destinationTokenAccount,\n      managerFeeAccount: stakePool.managerFeeAccount,\n      referralPoolAccount: referrerTokenAccount ?? destinationTokenAccount,\n      poolMint: stakePool.poolMint,\n      lamports,\n      withdrawAuthority,\n      depositAuthority,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to withdraw stake from a stake pool.\n */\nexport async function withdrawStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  amount: number,\n  useReserve = false,\n  voteAccountAddress?: PublicKey,\n  stakeReceiver?: PublicKey,\n  poolTokenAccount?: PublicKey,\n  validatorComparator?: (_a: ValidatorAccount, _b: ValidatorAccount) => number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = new BN(solToLamports(amount));\n\n  if (!poolTokenAccount) {\n    poolTokenAccount = getAssociatedTokenAddressSync(\n      stakePool.account.data.poolMint,\n      tokenOwner,\n      true,\n    );\n  }\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount.toNumber()) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n        Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  const stakeAccountRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  let stakeReceiverAccount: any = null;\n  if (stakeReceiver) {\n    stakeReceiverAccount = await getStakeAccount(connection, stakeReceiver);\n  }\n\n  const withdrawAccounts: WithdrawAccount[] = [];\n\n  if (useReserve) {\n    withdrawAccounts.push({\n      stakeAddress: stakePool.account.data.reserveStake,\n      voteAddress: undefined,\n      poolAmount,\n    });\n  } else if (stakeReceiverAccount?.type === 'delegated') {\n    const voteAccount = stakeReceiverAccount?.info?.stake?.delegation.voter;\n    if (!voteAccount) {\n      throw new Error(`Invalid stake receiver ${stakeReceiver} delegation`);\n    }\n    const validatorListAccount = await connection.getAccountInfo(\n      stakePool.account.data.validatorList,\n    );\n    const validatorList = ValidatorListLayout.decode(\n      Buffer.from(validatorListAccount?.data ?? []),\n    ) as ValidatorList;\n    const isValidVoter = validatorList.validators.find((val) =>\n      val.voteAccountAddress.equals(voteAccount),\n    );\n    if (voteAccountAddress && voteAccountAddress !== voteAccount) {\n      throw new Error(`Provided withdrawal vote account ${voteAccountAddress} does not match delegation on stake receiver account ${voteAccount},\n      remove this flag or provide a different stake account delegated to ${voteAccountAddress}`);\n    }\n    if (isValidVoter) {\n      const stakeAccountAddress = findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        voteAccount,\n        stakePoolAddress,\n      );\n\n      const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n      if (!stakeAccount) {\n        throw new Error(\"Preferred withdraw validator's stake account is invalid\");\n      }\n\n      const availableForWithdrawal = calcLamportsWithdrawAmount(\n        stakePool.account.data,\n        new BN(stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption),\n      );\n\n      if (availableForWithdrawal.lt(poolAmount)) {\n        throw new Error(\n          `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n            ${poolAmount} asked, ${availableForWithdrawal} available.`,\n        );\n      }\n      withdrawAccounts.push({\n        stakeAddress: stakeAccountAddress,\n        voteAddress: voteAccount,\n        poolAmount,\n      });\n    } else {\n      throw new Error(\n        `Provided stake account is delegated to a vote account ${voteAccount} which does not exist in the stake pool`,\n      );\n    }\n  } else if (voteAccountAddress) {\n    const stakeAccountAddress = findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      voteAccountAddress,\n      stakePoolAddress,\n    );\n    const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n    if (!stakeAccount) {\n      throw new Error('Invalid Stake Account');\n    }\n\n    const availableLamports = new BN(\n      stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n    );\n    if (availableLamports.lt(new BN(0))) {\n      throw new Error('Invalid Stake Account');\n    }\n\n    const availableForWithdrawal = calcLamportsWithdrawAmount(\n      stakePool.account.data,\n      availableLamports,\n    );\n\n    if (availableForWithdrawal.lt(poolAmount)) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(\n        `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n          ${poolAmount} asked, ${availableForWithdrawal} available.`,\n      );\n    }\n    withdrawAccounts.push({\n      stakeAddress: stakeAccountAddress,\n      voteAddress: voteAccountAddress,\n      poolAmount,\n    });\n  } else {\n    // Get the list of accounts to withdraw from\n    withdrawAccounts.push(\n      ...(await prepareWithdrawAccounts(\n        connection,\n        stakePool.account.data,\n        stakePoolAddress,\n        poolAmount,\n        validatorComparator,\n        poolTokenAccount.equals(stakePool.account.data.managerFeeAccount),\n      )),\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount.toNumber(),\n    ),\n  );\n\n  let totalRentFreeBalances = 0;\n\n  // Max 5 accounts to prevent an error: \"Transaction too large\"\n  const maxWithdrawAccounts = 5;\n  let i = 0;\n\n  // Go through prepared accounts and withdraw/claim them\n  for (const withdrawAccount of withdrawAccounts) {\n    if (i > maxWithdrawAccounts) {\n      break;\n    }\n    // Convert pool tokens amount to lamports\n    const solWithdrawAmount = calcLamportsWithdrawAmount(\n      stakePool.account.data,\n      withdrawAccount.poolAmount,\n    );\n\n    let infoMsg = `Withdrawing ◎${solWithdrawAmount},\n      from stake account ${withdrawAccount.stakeAddress?.toBase58()}`;\n\n    if (withdrawAccount.voteAddress) {\n      infoMsg = `${infoMsg}, delegated to ${withdrawAccount.voteAddress?.toBase58()}`;\n    }\n\n    console.info(infoMsg);\n    let stakeToReceive;\n\n    if (!stakeReceiver || (stakeReceiverAccount && stakeReceiverAccount.type === 'delegated')) {\n      const stakeKeypair = newStakeAccount(tokenOwner, instructions, stakeAccountRentExemption);\n      signers.push(stakeKeypair);\n      totalRentFreeBalances += stakeAccountRentExemption;\n      stakeToReceive = stakeKeypair.publicKey;\n    } else {\n      stakeToReceive = stakeReceiver;\n    }\n\n    instructions.push(\n      StakePoolInstruction.withdrawStake({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        validatorStake: withdrawAccount.stakeAddress,\n        destinationStake: stakeToReceive,\n        destinationStakeAuthority: tokenOwner,\n        sourceTransferAuthority: userTransferAuthority.publicKey,\n        sourcePoolAccount: poolTokenAccount,\n        managerFeeAccount: stakePool.account.data.managerFeeAccount,\n        poolMint: stakePool.account.data.poolMint,\n        poolTokens: withdrawAccount.poolAmount,\n        withdrawAuthority,\n      }),\n    );\n    i++;\n  }\n  if (stakeReceiver && stakeReceiverAccount?.type === 'delegated') {\n    signers.forEach((newStakeKeypair) => {\n      instructions.concat(\n        StakeProgram.merge({\n          stakePubkey: stakeReceiver,\n          sourceStakePubKey: newStakeKeypair.publicKey,\n          authorizedPubkey: tokenOwner,\n        }).instructions,\n      );\n    });\n  }\n\n  return {\n    instructions,\n    signers,\n    stakeReceiver,\n    totalRentFreeBalances,\n  };\n}\n\n/**\n * Creates instructions required to withdraw SOL directly from a stake pool.\n */\nexport async function withdrawSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  solReceiver: PublicKey,\n  amount: number,\n  solWithdrawAuthority?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  const poolTokenAccount = getAssociatedTokenAddressSync(\n    stakePool.account.data.poolMint,\n    tokenOwner,\n    true,\n  );\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n          Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [];\n\n  // const userTransferAuthority = Keypair.generate();\n  // const signers: Signer[] = [userTransferAuthority];\n  // instructions.push(\n  //   createApproveInstruction(\n  //     poolTokenAccount,\n  //     userTransferAuthority.publicKey,\n  //     tokenOwner,\n  //     poolAmount,\n  //   ),\n  // );\n\n  const poolWithdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  if (solWithdrawAuthority) {\n    const expectedSolWithdrawAuthority = stakePool.account.data.solWithdrawAuthority;\n    if (!expectedSolWithdrawAuthority) {\n      throw new Error('SOL withdraw authority specified in arguments but stake pool has none');\n    }\n    if (solWithdrawAuthority.toBase58() !== expectedSolWithdrawAuthority.toBase58()) {\n      throw new Error(\n        `Invalid deposit withdraw specified, expected ${expectedSolWithdrawAuthority.toBase58()}, received ${solWithdrawAuthority.toBase58()}`,\n      );\n    }\n  }\n\n  const withdrawTransaction = StakePoolInstruction.withdrawSol({\n    stakePool: stakePoolAddress,\n    withdrawAuthority: poolWithdrawAuthority,\n    reserveStake: stakePool.account.data.reserveStake,\n    sourcePoolAccount: poolTokenAccount,\n    sourceTransferAuthority: tokenOwner,\n    destinationSystemAccount: solReceiver,\n    managerFeeAccount: stakePool.account.data.managerFeeAccount,\n    poolMint: stakePool.account.data.poolMint,\n    poolTokens: poolAmount,\n    solWithdrawAuthority,\n  });\n\n  instructions.push(withdrawTransaction);\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to increase validator stake.\n */\nexport async function increaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() === validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  // Bump transient seed suffix by one to avoid reuse when not using the increaseAdditionalStake instruction\n  const transientStakeSeed =\n    ephemeralStakeSeed === undefined\n      ? validatorInfo.transientSeedSuffixStart.addn(1)\n      : validatorInfo.transientSeedSuffixStart;\n\n  const transientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed !== undefined) {\n    const ephemeralStake = findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    StakePoolInstruction.increaseAdditionalValidatorStake({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      transientStakeSeed: transientStakeSeed.toNumber(),\n      withdrawAuthority,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    });\n  } else {\n    instructions.push(\n      StakePoolInstruction.increaseValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to decrease validator stake.\n */\nexport async function decreaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() === validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  // Bump transient seed suffix by one to avoid reuse when not using the decreaseAdditionalStake instruction\n  const transientStakeSeed =\n    ephemeralStakeSeed === undefined\n      ? validatorInfo.transientSeedSuffixStart.addn(1)\n      : validatorInfo.transientSeedSuffixStart;\n\n  const transientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed !== undefined) {\n    const ephemeralStake = findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.decreaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed,\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.decreaseValidatorStakeWithReserve({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed,\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to completely update a stake pool after epoch change.\n */\nexport async function updateStakePool(\n  connection: Connection,\n  stakePool: StakePoolAccount,\n  noMerge = false,\n) {\n  const stakePoolAddress = stakePool.pubkey;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const updateListInstructions: TransactionInstruction[] = [];\n  const instructions: TransactionInstruction[] = [];\n\n  let startIndex = 0;\n  const validatorChunks = arrayChunk(\n    validatorList.account.data.validators,\n    MAX_VALIDATORS_TO_UPDATE,\n  );\n\n  for (const validatorChunk of validatorChunks) {\n    const validatorAndTransientStakePairs: PublicKey[] = [];\n\n    for (const validator of validatorChunk) {\n      const validatorStake = findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      validatorAndTransientStakePairs.push(validatorStake);\n\n      const transientStake = findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      validatorAndTransientStakePairs.push(transientStake);\n    }\n\n    updateListInstructions.push(\n      StakePoolInstruction.updateValidatorListBalance({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        validatorAndTransientStakePairs,\n        withdrawAuthority,\n        startIndex,\n        noMerge,\n      }),\n    );\n    startIndex += MAX_VALIDATORS_TO_UPDATE;\n  }\n\n  instructions.push(\n    StakePoolInstruction.updateStakePoolBalance({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      poolMint: stakePool.account.data.poolMint,\n      withdrawAuthority,\n    }),\n  );\n\n  instructions.push(\n    StakePoolInstruction.cleanupRemovedValidatorEntries({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n    }),\n  );\n\n  return {\n    updateListInstructions,\n    finalInstructions: instructions,\n  };\n}\n\n/**\n * Retrieves detailed information about the StakePool.\n */\nexport async function stakePoolInfo(connection: Connection, stakePoolAddress: PublicKey) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const reserveAccountStakeAddress = stakePool.account.data.reserveStake;\n  const totalLamports = stakePool.account.data.totalLamports;\n  const lastUpdateEpoch = stakePool.account.data.lastUpdateEpoch;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const maxNumberOfValidators = validatorList.account.data.maxValidators;\n  const currentNumberOfValidators = validatorList.account.data.validators.length;\n\n  const epochInfo = await connection.getEpochInfo();\n  const reserveStake = await connection.getAccountInfo(reserveAccountStakeAddress);\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const minimumReserveStakeBalance = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const stakeAccounts = await Promise.all(\n    validatorList.account.data.validators.map(async (validator) => {\n      const stakeAccountAddress = findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      const transientStakeAccountAddress = findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      const updateRequired = !validator.lastUpdateEpoch.eqn(epochInfo.epoch);\n      return {\n        voteAccountAddress: validator.voteAccountAddress.toBase58(),\n        stakeAccountAddress: stakeAccountAddress.toBase58(),\n        validatorActiveStakeLamports: validator.activeStakeLamports.toString(),\n        validatorLastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        validatorLamports: validator.activeStakeLamports\n          .add(validator.transientStakeLamports)\n          .toString(),\n        validatorTransientStakeAccountAddress: transientStakeAccountAddress.toBase58(),\n        validatorTransientStakeLamports: validator.transientStakeLamports.toString(),\n        updateRequired,\n      };\n    }),\n  );\n\n  const totalPoolTokens = lamportsToSol(stakePool.account.data.poolTokenSupply);\n  const updateRequired = !lastUpdateEpoch.eqn(epochInfo.epoch);\n\n  return {\n    address: stakePoolAddress.toBase58(),\n    poolWithdrawAuthority: withdrawAuthority.toBase58(),\n    manager: stakePool.account.data.manager.toBase58(),\n    staker: stakePool.account.data.staker.toBase58(),\n    stakeDepositAuthority: stakePool.account.data.stakeDepositAuthority.toBase58(),\n    stakeWithdrawBumpSeed: stakePool.account.data.stakeWithdrawBumpSeed,\n    maxValidators: maxNumberOfValidators,\n    validatorList: validatorList.account.data.validators.map((validator) => {\n      return {\n        activeStakeLamports: validator.activeStakeLamports.toString(),\n        transientStakeLamports: validator.transientStakeLamports.toString(),\n        lastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        transientSeedSuffixStart: validator.transientSeedSuffixStart.toString(),\n        transientSeedSuffixEnd: validator.transientSeedSuffixEnd.toString(),\n        status: validator.status.toString(),\n        voteAccountAddress: validator.voteAccountAddress.toString(),\n      };\n    }), // CliStakePoolValidator\n    validatorListStorageAccount: stakePool.account.data.validatorList.toBase58(),\n    reserveStake: stakePool.account.data.reserveStake.toBase58(),\n    poolMint: stakePool.account.data.poolMint.toBase58(),\n    managerFeeAccount: stakePool.account.data.managerFeeAccount.toBase58(),\n    tokenProgramId: stakePool.account.data.tokenProgramId.toBase58(),\n    totalLamports: stakePool.account.data.totalLamports.toString(),\n    poolTokenSupply: stakePool.account.data.poolTokenSupply.toString(),\n    lastUpdateEpoch: stakePool.account.data.lastUpdateEpoch.toString(),\n    lockup: stakePool.account.data.lockup, // pub lockup: CliStakePoolLockup\n    epochFee: stakePool.account.data.epochFee,\n    nextEpochFee: stakePool.account.data.nextEpochFee,\n    preferredDepositValidatorVoteAddress:\n      stakePool.account.data.preferredDepositValidatorVoteAddress,\n    preferredWithdrawValidatorVoteAddress:\n      stakePool.account.data.preferredWithdrawValidatorVoteAddress,\n    stakeDepositFee: stakePool.account.data.stakeDepositFee,\n    stakeWithdrawalFee: stakePool.account.data.stakeWithdrawalFee,\n    // CliStakePool the same\n    nextStakeWithdrawalFee: stakePool.account.data.nextStakeWithdrawalFee,\n    stakeReferralFee: stakePool.account.data.stakeReferralFee,\n    solDepositAuthority: stakePool.account.data.solDepositAuthority?.toBase58(),\n    solDepositFee: stakePool.account.data.solDepositFee,\n    solReferralFee: stakePool.account.data.solReferralFee,\n    solWithdrawAuthority: stakePool.account.data.solWithdrawAuthority?.toBase58(),\n    solWithdrawalFee: stakePool.account.data.solWithdrawalFee,\n    nextSolWithdrawalFee: stakePool.account.data.nextSolWithdrawalFee,\n    lastEpochPoolTokenSupply: stakePool.account.data.lastEpochPoolTokenSupply.toString(),\n    lastEpochTotalLamports: stakePool.account.data.lastEpochTotalLamports.toString(),\n    details: {\n      reserveStakeLamports: reserveStake?.lamports,\n      reserveAccountStakeAddress: reserveAccountStakeAddress.toBase58(),\n      minimumReserveStakeBalance,\n      stakeAccounts,\n      totalLamports,\n      totalPoolTokens,\n      currentNumberOfValidators,\n      maxNumberOfValidators,\n      updateRequired,\n    }, // CliStakePoolDetails\n  };\n}\n\ninterface RedelegateProps {\n  connection: Connection;\n  stakePoolAddress: PublicKey;\n  sourceVoteAccount: PublicKey;\n  destinationVoteAccount: PublicKey;\n  ephemeralStakeSeed?: number | BN;\n  lamports: number | BN;\n}\n\n/**\n * Creates instructions required to redelegate stake.\n */\nexport async function redelegate(props: RedelegateProps) {\n  const {\n    connection,\n    stakePoolAddress,\n    sourceVoteAccount,\n    destinationVoteAccount,\n    ephemeralStakeSeed,\n    lamports,\n  } = props;\n\n  const defaultEphemeralStakeSeed = 0;\n\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const sourceVoteAccountInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() === sourceVoteAccount.toBase58(),\n  );\n\n  if (!sourceVoteAccountInfo) {\n    throw new Error('Source vote account not found in validator list');\n  }\n\n  const destVoteAccountInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() === destinationVoteAccount.toBase58(),\n  );\n\n  if (!destVoteAccountInfo) {\n    throw new Error('Destination vote account not found in validator list');\n  }\n\n  const stakePoolWithdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const sourceValidatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n  );\n\n  const sourceTransientStakeSeed = sourceVoteAccountInfo.transientSeedSuffixStart;\n\n  const sourceTransientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n    new BN(sourceTransientStakeSeed),\n  );\n\n  const destinationValidatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n  );\n\n  const destinationTransientStakeSeed = destVoteAccountInfo.transientSeedSuffixStart;\n\n  const destinationTransientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n    new BN(destinationTransientStakeSeed),\n  );\n\n  const ephemeralStake = findEphemeralStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n    new BN(ephemeralStakeSeed ?? defaultEphemeralStakeSeed),\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.redelegate({\n      stakePool: stakePool.pubkey,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      stakePoolWithdrawAuthority,\n      ephemeralStake,\n      ephemeralStakeSeed: ephemeralStakeSeed ?? defaultEphemeralStakeSeed,\n      sourceValidatorStake,\n      sourceTransientStake,\n      sourceTransientStakeSeed,\n      destinationValidatorStake,\n      destinationTransientStake,\n      destinationTransientStakeSeed,\n      validator: destinationVoteAccount,\n      lamports,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\ninterface InitializeProps {\n  connection: Connection;\n  manager: Keypair;\n  // Default: Keypair.generate\n  stakePool?: Keypair;\n  // Default: Keypair.generate\n  validatorList?: Keypair;\n  poolMint: PublicKey;\n  reserveStake: PublicKey;\n  managerPoolAccount: PublicKey;\n  fee?: Fee;\n  depositFee?: Fee;\n  withdrawalFee?: Fee;\n  referralFee?: number;\n  // Default: 2949\n  maxValidators?: number;\n}\n\n/**\n * Initializes a new StakePool.\n */\nexport async function initialize(props: InitializeProps) {\n  const {\n    connection,\n    poolMint,\n    reserveStake,\n    manager,\n    managerPoolAccount,\n    fee,\n    depositFee,\n    withdrawalFee,\n    referralFee,\n  } = props;\n\n  const poolBalance = await connection.getMinimumBalanceForRentExemption(StakePoolLayout.span);\n\n  const stakePool = props.stakePool ?? Keypair.generate();\n  const validatorList = props.validatorList ?? Keypair.generate();\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [manager, stakePool, validatorList];\n\n  instructions.push(\n    SystemProgram.createAccount({\n      fromPubkey: manager.publicKey,\n      newAccountPubkey: stakePool.publicKey,\n      lamports: poolBalance,\n      space: StakePoolLayout.span,\n      programId: STAKE_POOL_PROGRAM_ID,\n    }),\n  );\n\n  const maxValidators = props.maxValidators ?? DEFAULT_MAX_VALIDATORS;\n  const validatorListSpace =\n    ValidatorListLayout.span + ValidatorStakeInfoLayout.span * maxValidators;\n  const validatorListBalance =\n    await connection.getMinimumBalanceForRentExemption(validatorListSpace);\n\n  instructions.push(\n    SystemProgram.createAccount({\n      fromPubkey: manager.publicKey,\n      newAccountPubkey: validatorList.publicKey,\n      lamports: validatorListBalance,\n      space: validatorListSpace,\n      programId: STAKE_POOL_PROGRAM_ID,\n    }),\n  );\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePool.publicKey,\n  );\n\n  instructions.push(\n    StakePoolInstruction.initialize({\n      stakePool: stakePool.publicKey,\n      manager: manager.publicKey,\n      staker: manager.publicKey,\n      stakePoolWithdrawAuthority: withdrawAuthority,\n      validatorList: validatorList.publicKey,\n      poolMint,\n      managerPoolAccount,\n      reserveStake,\n      fee: fee ?? { denominator: new BN(0), numerator: new BN(0) },\n      withdrawalFee: withdrawalFee ?? { denominator: new BN(0), numerator: new BN(0) },\n      depositFee: depositFee ?? { denominator: new BN(0), numerator: new BN(0) },\n      referralFee: referralFee ?? 0,\n      maxValidators,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\ninterface CreateStakePoolTokenMetadataProps extends UpdateStakePoolTokenMetadataProps {\n  payer: PublicKey;\n}\n\n/**\n * Creates instructions required to create pool token metadata.\n */\nexport async function createPoolTokenMetadata(props: CreateStakePoolTokenMetadataProps) {\n  const { connection, name, symbol, uri, payer } = props;\n\n  const stakePool =\n    props.stakePool instanceof PublicKey\n      ? await getStakePoolAccount(connection, props.stakePool)\n      : props.stakePool;\n\n  const tokenMetadata = props.tokenMetadata ?? findMetadataAddress(stakePool.account.data.poolMint);\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePool.pubkey,\n  );\n\n  const manager = stakePool.account.data.manager;\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.createTokenMetadata({\n      stakePool: stakePool.pubkey,\n      poolMint: stakePool.account.data.poolMint,\n      payer,\n      manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\ninterface UpdateStakePoolTokenMetadataProps {\n  connection: Connection;\n  stakePool: StakePoolAccount | PublicKey;\n  tokenMetadata?: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n}\n\n/**\n * Creates instructions required to update pool token metadata.\n */\nexport async function updatePoolTokenMetadata(props: UpdateStakePoolTokenMetadataProps) {\n  const { connection, name, symbol, uri } = props;\n\n  const stakePool =\n    props.stakePool instanceof PublicKey\n      ? await getStakePoolAccount(connection, props.stakePool)\n      : props.stakePool;\n\n  const tokenMetadata = props.tokenMetadata ?? findMetadataAddress(stakePool.account.data.poolMint);\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePool.pubkey,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.updateTokenMetadata({\n      stakePool: stakePool.pubkey,\n      manager: stakePool.account.data.manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to add a validator to the pool.\n */\nexport async function addValidatorToPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  seed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() === validatorVote.toBase58(),\n  );\n\n  if (validatorInfo) {\n    throw new Error(\n      `Stake pool already contains validator ${validatorInfo.voteAccountAddress.toBase58()}, ignoring`,\n    );\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.addValidatorToPool({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      reserveStake: stakePool.account.data.reserveStake,\n      validatorList: stakePool.account.data.validatorList,\n      validatorStake,\n      withdrawAuthority,\n      validatorVote,\n      seed,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instruction to remove a validator based on their vote account address.\n */\nexport async function removeValidatorFromPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() === validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const transientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    validatorInfo.transientSeedSuffixStart,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.removeValidatorFromPool({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      validatorStake,\n      transientStake,\n      withdrawAuthority,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","this","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","msg","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","isBytes","lengths","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","crypto","globalThis","u32","Uint32Array","createView","DataView","rotr","word","shift","TextEncoder","encode","toBytes","concatBytes","arrays","sum","pad","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","update","digest","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","h","l","setUint32","SHA2","padOffset","take","dataView","process","roundClean","digestInto","oview","outLen","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_0n","_1n","_2n","hexes","_","padStart","bytesToHex","hex","numberToHexUnpadded","hexToNumber","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hexToBytes","hl","al","ai","n1","n2","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","equalBytes","diff","bitLen","bitGet","bitSet","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","_3n","_4n","_5n","_8n","mod","result","power","modulo","pow2","invert","u","q","r","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","tonelliFast","root","eql","sqr","Q1div2","tonelliSlow","neg","ONE","g","ZERO","t2","ge","FpSqrt","sqrt3mod4","c1","sqrt5mod8","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","reduce","FpPow","f","p","FpInvertBatch","nums","lastMultiplied","acc","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","fromBytes","FpSqrtEven","elm","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","mapHashToField","key","fieldLen","minLen","reduced","wNAF","bits","constTimeNegate","condition","item","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","Map","isPoint","other","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","fromHex","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","context","msgs","ut.concatBytes","sign","options","R","verifyOpts","verify","sig","publicKey","SB","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","Fp$1","module","assert","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","cmp","init","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","parseHex4Bits","index","parseHexByte","lowerBound","parseLength","parseBase","limbLen","limbPow","total","imuln","_iaddn","dest","move","_move","_expand","strip","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toBuffer","toArrayLike","allocate","ArrayType","reqLength","postfix","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","self","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","isqr","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","qj","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","isEven","yp","xp","im","jm","_invmp","x1","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","ireduce","rlen","imulK","K256","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","wnd","current","currentLen","mont","Mont","rinv","minv","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","count","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","forEach","serializeStruct","borshSerialize","structSchema","fields","idx","values","Writer","deserializeField","reader","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Layout_1","Layout$3","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","Layout$2","span","property","makeDestinationObject","getSpan","replicate","rv","assign","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator$1","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","BitField$1","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","StructError","failure","failures","cached","rest","path","_cached","isIterable","isObject","iterator","print","JSON","stringify","shiftIterator","done","toFailure","branch","refinement","toFailures","run","coerce","coercer","valid","validator","ts","Set","refiner","Struct$2","Struct","props","is","validate","tuples","tuple","define","any","Element","literal","description","never","nullable","optional","record","Key","Value","Elements","Never","keys","Structs","unknown","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","version","hashfunc","generateUUID","namespace","err","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_i","_i2","_t","_t2","v5","v5$1","nil","generateRequest","method","params","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","filter","_interopRequireDefault","_typeof","_regeneratorRuntime","asyncIterator","toStringTag","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","__proto__","awrap","async","Promise","stop","rval","handle","complete","finish","catch","_catch","delegateYield","runtime","regenerator","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","reject","_next","_throw","info","_asyncToGenerator","_classCallCheck","Constructor","toPropertyKey","_defineProperties","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","_inherits","subClass","superClass","_assertThisInitialized","ReferenceError","assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","has","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","DefaultDataPack","createError","_classCallCheck2","_createClass2","details","_regenerator","_asyncToGenerator2","_typeof2","require$$3","require$$4","require$$5","_inherits2","require$$6","_possibleConstructorReturn2","require$$7","_getPrototypeOf2","require$$8","_eventemitter","require$$9","_utils","require$$10","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","construct","sham","Proxy","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","_super","webSocketFactory","_this","address","generate_request_id","dataPack","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","connect","socket","timeout","ws_opts","_this2","send","promise","setTimeout","_login","_callee","resp","_callee$","_context","login","_x","_listMethods","_callee2","_callee2$","_context2","listMethods","notify","_this3","_subscribe","_callee3","_callee3$","_context3","subscribe","_x2","_unsubscribe","_callee4","_callee4$","_context4","unsubscribe","_x3","close","_this4","clearTimeout","addEventListener","_ref","notification","_ref2","reason","_default","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","ut","DER","Err","DERErr","_parseInt","toSig","ut.isBytes","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","hmac","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","mod.invert","cat","isYOdd","isHeadOdd","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","mod.getMinHashLength","mod.mapHashToField","isProbPub","getSharedSecret","privateA","publicB","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","ut.createHmacDrbg","signature","sg","_sig","derError","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","POW_2_128","c2","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","Struct$1","properties","SOLANA_SCHEMA","decodeUnchecked","Enum","enum","_class","_Symbol$toStringTag","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","PublicKey","decoded","unique","toBase58","zeroPad","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","findProgramAddress","pubkeyData","pubkey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout.blob","rustString","rsl","BufferLayout.struct","BufferLayout.u32","BufferLayout.offset","_decode","_encode","rslShim","chars","authorized","lockup","BufferLayout.ns64","voteInit","BufferLayout.u8","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","programIds","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","BufferLayout.seq","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","_compile","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","TransactionMessage","decompile","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","encodeData","allocLength","layoutFields","decodeData$1","FeeCalculatorLayout","BufferLayout.nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","encodeDecode","bigInt","bigIntLayout","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","createAccount","transfer","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","CHUNK_SIZE","Loader","getMinNumSignatures","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","getDefaultExportFromCjs","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","fastStableStringify$1","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","fetchImpl","fetch","RpcWebSocketClient","RpcWebSocketCommonClient","url","rpc","createRpc","underlyingSocket","readyState","decodeData","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","agent","fetchWithMiddleware","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","getBalance","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","configWithoutEncoding","baseSchema","withContext","getParsedProgramAccounts","strategy","rawSignature","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","getClusterNodes","getVoteAccounts","getSlotLeader","getSlotLeaders","startSlot","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getInflationRate","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentPrioritizationFees","lockedWritableAccounts","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","isBlockhashValid","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","transactionDetails","getParsedBlock","getBlockProduction","extra","getTransaction","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonce","requestAirdrop","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","BufferLayout.u16","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","ecdsaSign","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","_class2","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","authorize","authorizeWithSeed","splitInstruction","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","VALIDATOR_INFO_KEY","InfoString","website","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","assert$1","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","TOKEN_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","bool","boolLayout","publicKeyLayout","TokenError","TokenAccountNotFoundError","TokenInvalidAccountError","TokenInvalidAccountOwnerError","TokenInvalidAccountSizeError","TokenOwnerOffCurveError","TokenInstruction","addSigners","ownerOrAuthority","multiSigners","approveInstructionData","createApproveInstruction","Approve","AccountType","ACCOUNT_TYPE_SIZE","MultisigLayout","MULTISIG_SIZE","AccountState","AccountLayout","ACCOUNT_SIZE","getAccount","unpackAccount","rawAccount","tlvData","delegateOption","delegatedAmount","isInitialized","Uninitialized","isFrozen","Frozen","isNative","isNativeOption","rentExemptReserve","closeAuthority","closeAuthorityOption","MintLayout","getAssociatedTokenAddressSync","allowOwnerOffCurve","associatedTokenProgramId","createAssociatedTokenAccountIdempotentInstruction","associatedToken","buildAssociatedTokenAccountInstruction","explanation","cause","enums","Layout_2","Layout$1","upv","const","FutureEpochLayout","LayoutCls","futureEpoch","SOL_DECIMALS","log10","solToLamports","lamportsToSol","signMultiplier","absLamports","lamportsString","splitIndex","solString","parseFloat","METADATA_PROGRAM_ID","METADATA_MAX_NAME_LENGTH","METADATA_MAX_SYMBOL_LENGTH","METADATA_MAX_URI_LENGTH","STAKE_POOL_PROGRAM_ID","MAX_VALIDATORS_TO_UPDATE","EPHEMERAL_STAKE_SEED_PREFIX","TRANSIENT_STAKE_SEED_PREFIX","MINIMUM_ACTIVE_STAKE","DEFAULT_MAX_VALIDATORS","findWithdrawAuthorityProgramAddress","stakePoolAddress","findStakeProgramAddress","voteAccountAddress","findTransientStakeProgramAddress","findEphemeralStakeProgramAddress","findMetadataAddress","rustEnum","vecU8","tagged","vec","i256","u256","i128","u128","i32","i8","buffer_layout_1","web3_js_1","buffer_layout_2","BNLayout","signed","i64","WrappedLayout","decoder","encoder","OptionLayout","decodeBool","encodeBool","wrappedLayout","decodeTag","receivedTag","variants","discriminant","unionLayout","MapEntryLayout","keyLayout","valueLayout","keyBytes","valueBytes","BigNumFromString","StakeAccountType","StakeMeta","StakeAccountInfo","stake","delegation","voter","activationEpoch","deactivationEpoch","warmupCooldownRate","creditsObserved","StakeAccount","StakePoolLayout","ValidatorStakeInfoStatus","ValidatorStakeInfoLayout","ValidatorListLayout","getValidatorListAccount","prepareWithdrawAccounts","stakePool","compareFn","skipFee","validatorListAcc","validatorList","minBalanceForRentExemption","minBalance","Active","stakeAccountAddress","activeStakeLamports","isPreferred","_b","preferredWithdrawValidatorVoteAddress","voteAddress","stakeAddress","transientStakeLamports","transientStakeAccountAddress","transientSeedSuffixStart","reserveStake","reserveStakeBalance","withdrawFrom","remainingAmount","stakeWithdrawalFee","inverseFee","numerator","denominator","filteredAccounts","availableForWithdrawal","calcPoolTokensForDeposit","poolAmount","stakeLamports","poolTokenSupply","totalLamports","calcLamportsWithdrawAmount","poolTokens","newStakeAccount","stakeReceiverKeypair","arrayChunk","MOVE_STAKE_LAYOUT","tokenMetadataLayout","nameLength","symbolLength","uriLength","STAKE_POOL_INSTRUCTION_LAYOUTS","AddValidatorToPool","RemoveValidatorFromPool","DecreaseValidatorStake","IncreaseValidatorStake","SetPreferredValidator","UpdateValidatorListBalance","UpdateStakePoolBalance","CleanupRemovedValidatorEntries","DepositStake","WithdrawStake","SetManager","SetFee","SetStaker","DepositSol","SetFundingAuthority","WithdrawSol","IncreaseAdditionalValidatorStake","DecreaseAdditionalValidatorStake","DecreaseValidatorStakeWithReserve","Redelegate","DepositStakeWithSlippage","WithdrawStakeWithSlippage","DepositSolWithSlippage","WithdrawSolWithSlippage","StakePoolInstruction","withdrawalFee","depositFee","referralFee","maxValidators","manager","stakePoolWithdrawAuthority","poolMint","managerPoolAccount","depositAuthority","addValidatorToPool","withdrawAuthority","validatorStake","validatorVote","removeValidatorFromPool","transientStake","updateValidatorListBalance","startIndex","noMerge","validatorAndTransientStakePairs","updateStakePoolBalance","managerFeeAccount","cleanupRemovedValidatorEntries","increaseValidatorStake","transientStakeSeed","increaseAdditionalValidatorStake","ephemeralStake","ephemeralStakeSeed","decreaseValidatorStake","decreaseValidatorStakeWithReserve","decreaseAdditionalValidatorStake","depositStake","destinationPoolAccount","referralPoolAccount","depositSol","fundingAccount","minimumPoolTokensOut","withdrawStake","destinationStake","destinationStakeAuthority","sourceTransferAuthority","sourcePoolAccount","minimumLamportsOut","withdrawSol","destinationSystemAccount","solWithdrawAuthority","createTokenMetadata","tokenMetadata","symbol","uri","nameLen","symbolLen","uriLen","updateTokenMetadata","redelegate","sourceValidatorStake","sourceTransientStake","destinationTransientStake","destinationValidatorStake","sourceTransientStakeSeed","destinationTransientStakeSeed","setManager","newManager","newFeeReceiver","setFee","setStaker","setStakerAuthority","newStaker","setFundingAuthority","newSolDepositAuthority","fundingType","setPreferredValidator","validatorType","validatorVoteAddress","getStakePoolAccount","getStakeAccount","stakeAccount","getStakePoolAccounts","stakePoolProgramAddress","decodedData","poolTokenReceiverAccount","associatedAddress","stakeDepositAuthority","destinationTokenAccount","referrerTokenAccount","fromBalance","stakePoolAccount","tokenOwner","useReserve","stakeReceiver","poolTokenAccount","validatorComparator","tokenAccount","stakeAccountRentExemption","stakeReceiverAccount","withdrawAccounts","voteAccount","_d","validatorListAccount","isValidVoter","availableLamports","userTransferAuthority","totalRentFreeBalances","maxWithdrawAccounts","withdrawAccount","solWithdrawAmount","infoMsg","_g","stakeToReceive","stakeKeypair","newStakeKeypair","solReceiver","poolWithdrawAuthority","expectedSolWithdrawAuthority","withdrawTransaction","validatorInfo","updateStakePool","updateListInstructions","validatorChunks","validatorChunk","finalInstructions","stakePoolInfo","reserveAccountStakeAddress","lastUpdateEpoch","maxNumberOfValidators","currentNumberOfValidators","epochInfo","minimumReserveStakeBalance","stakeAccounts","updateRequired","validatorActiveStakeLamports","validatorLastUpdateEpoch","validatorLamports","validatorTransientStakeAccountAddress","validatorTransientStakeLamports","totalPoolTokens","stakeWithdrawBumpSeed","transientSeedSuffixEnd","validatorListStorageAccount","tokenProgramId","epochFee","nextEpochFee","preferredDepositValidatorVoteAddress","stakeDepositFee","nextStakeWithdrawalFee","stakeReferralFee","solDepositAuthority","solDepositFee","solReferralFee","solWithdrawalFee","nextSolWithdrawalFee","lastEpochPoolTokenSupply","lastEpochTotalLamports","reserveStakeLamports","sourceVoteAccount","destinationVoteAccount","defaultEphemeralStakeSeed","sourceVoteAccountInfo","destVoteAccountInfo","poolBalance","validatorListSpace","validatorListBalance","createPoolTokenMetadata","updatePoolTokenMetadata"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84]}